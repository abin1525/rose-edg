This file describes how to compile ROSE using ROSE, it is a common step in building
a compiler which can handle the imput language in which the compiler is implemented.

This is the command line to configure to compile ROSE using a copy of ROSE.
It is assumed that there is a translator built using ROSE (any ROSE translators 
should do) and that it is available in the user's path (roseTranslator).

# DQ (8/22/2009): Note that one must build a link to a translator built 
# using ROSE (must be called "roseTranslator"), for example.
ln -s /home/dquinlan/ROSE/ROSE_CompileTree/svn-LINUX-64bit-4.2.2/developersScratchSpace/Dan/preprocessor roseTranslator

# DQ (8/22/2009): Then call configure to setup ROSe to be compiled using the "roseTranslator"
/home/dquinlan/ROSE/svn-rose/configure CXX=roseTranslator --prefix=/home/dquinlan/ROSE/ROSE_CompileTree/svn-LINUX-64bit-4.2.2-RoseOnRose_install --with-boost=/home/dquinlan/local/boost_1_37_0_installTree-gxx-4.2.2


This will only use ROSE ("roseTranslator") to compile the C++ parts of ROSE.

This work is part of the tests of ROSE for robustness and not particularly useful 
for anything else.  That ROSE can comile much of the ROSE source code use useful
within the ROSE project since it permits us to run our Compass tools on the ROSE
source code as part of the development process. This is part of our own quality
improvement work.

