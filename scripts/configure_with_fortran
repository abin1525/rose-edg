Fortran support in ROSE is quite new and is made possible by ther really nice work at LANL
to build a Fortran 2003 parser.   Of course the parser is the first part of the puzzle,
ROSE uses the OFP to build a full front-end with analysis and back-end code generation
(source-to-source).


DQ (7/10/2008): With Fortran
/home/dquinlan/ROSE/svn-rose/configure --with-edg_source_code=true --enable-dq-developer-tests --with-boost=/home/dquinlan/local/boost_1_35_0_install --with-ROSE_LONG_MAKE_CHECK_RULE=yes --without-zlib --without-png --with-Java=/usr/apps/java/jdk1.5.0_11 --with-JavaJVM=/usr/apps/java/jdk1.5.0_11/jre/lib/amd64/server --with-openFortranParser=/home/dquinlan/ROSE/OpenFortranParser/fortran-parser --with-CXX_DEBUG=-g --with-C_DEBUG=-g --with-CXX_WARNINGS=-Wall --prefix=/home/dquinlan/ROSE/ROSE_CompileTree/svn_LINUX-64bit-3.4.6-fortran_install


DQ (6/5/2008): With Fortran:
/home/dquinlan/ROSE2/svn-rose/configure --with-edg_source_code=true --enable-dq-developer-tests --with-boost=/home/dquinlan/local/boost_1_35_0_install --with-ROSE_LONG_MAKE_CHECK_RULE=yes --with-Java=/usr/apps/java/jdk1.5.0_11 --with-JavaJVM=/usr/apps/java/jdk1.5.0_11/jre/lib/amd64/server --with-openFortranParser=/home/dquinlan/ROSE/OpenFortranParser/fortran-parser --with-CXX_DEBUG=-g --with-C_DEBUG=-g --with-CXX_WARNINGS=-Wall --prefix=/home/dquinlan/ROSE2/ROSE_CompileTree/svn_LINUX-64bit-3.4.6-fortran_install

Older command line:
DQ (12/1/2007): My typical configure line to turn on the Fortran support in ROSE:
/home/dquinlan/ROSE/NEW_ROSE/configure --with-edg_source_code=true --enable-dq-developer-tests --with-ROSE_LONG_MAKE_CHECK_RULE=yes --with-Java=/usr/apps/java/jdk1.5.0_11 --with-JavaJVM=/usr/apps/java/jdk1.5.0_11/jre/lib/amd64/server --with-openFortranParser=/home/dquinlan/ROSE/OpenFortranParser/fortran-parser --with-CXX_DEBUG=-g --with-C_DEBUG=-g --with-CXX_WARNINGS=-Wall -with-CXXFLAGS=-fPIC -with-CFLAGS=-fPIC --prefix=/home/dquinlan/ROSE/ROSE_CompileTree/LINUX-64bit-3.4.6-fortran_install CFLAGS=-fPIC CXXFLAGS=-fPIC


