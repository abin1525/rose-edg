Make sure that you have done a make at the root of the branch and the polyrose
files are built

Execute the script with the command:
perl run-correctness.pl

The test log is written into polybench-correctness-info.log and detailed
information about the errors are written into polybench-correctness-errors.log.
If the files already exist, the existing ones are renamed automatically.
The list of failed benchmarks are also written at the end of
polybench-correctness-errors.log.

The compilers using which the script tests are gcc and icc. More can be added
into the array @compilers as required.

The tile sizes for which the tests are run are permutations of [1 32 1024] and
with the --pocc-pluto flag where the tile size is determined automatically by
polyrose

The script executes the following benchmarks - more can be added into the
array @benchmarks as required:

datamining/correlation
datamining/covariance

image-processing/gauss-filter
image-processing/reg_detect

linear-algebra/kernels/atax
linear-algebra/kernels/bicg
linear-algebra/kernels/cholesky
linear-algebra/kernels/dgemm
linear-algebra/kernels/doitgen
linear-algebra/kernels/gemm
linear-algebra/kernels/gemver
linear-algebra/kernels/gesummv
linear-algebra/kernels/mvt
linear-algebra/kernels/symm
linear-algebra/kernels/syr2k
linear-algebra/kernels/syrk
linear-algebra/kernels/trisolv
linear-algebra/kernels/trmm
linear-algebra/solvers/durbin
linear-algebra/solvers/dynprog
linear-algebra/solvers/gramschmidt
linear-algebra/solvers/lu
linear-algebra/solvers/ludcmp

stencils/adi
stencils/fdtd-2d
stencils/fdtd-apml
stencils/jacobi-1d-imper
stencils/jacobi-2d-imper
stencils/seidel


