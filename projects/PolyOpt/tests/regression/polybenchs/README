* * * * * * * * * *
* PolyBenchs 0.1  *
* * * * * * * * * *


* Available benchmarks:

::linear-algebra::
linear-algebra/kernels:
linear-algebra/kernels/atax/atax.c
linear-algebra/kernels/bicg/bicg.c
linear-algebra/kernels/cholesky/cholesky.c
linear-algebra/kernels/doitgen/doitgen.c
linear-algebra/kernels/gemm/gemm.c
linear-algebra/kernels/gemver/gemver.c
linear-algebra/kernels/gesummv/gesummv.c
linear-algebra/kernels/mvt/mvt.c
linear-algebra/kernels/symm/symm.c
linear-algebra/kernels/syr2k/syr2k.c
linear-algebra/kernels/syrk/syrk.c
linear-algebra/kernels/trisolv/trisolv.c
linear-algebra/kernels/trmm/trmm.c

linear-algebra/solvers:
linear-algebra/solvers/durbin/durbin.c
linear-algebra/solvers/dynprog/dynprog.c
linear-algebra/solvers/gramschmidt/gramschmidt.c
linear-algebra/solvers/lu/lu.c
linear-algebra/solvers/ludcmp/ludcmp.c

::datamining::
datamining/correlation/correlation.c
datamining/covariance/covariance.c

::image-processing::
image-processing/gauss-filter/gauss-filter.c
image-processing/reg_detect/reg_detect.c

::stencils::
stencils/adi/adi.c
stencils/fdtd-2d/fdtd-2d.c
stencils/fdtd-apml/fdtd-apml.c
stencils/jacobi-1d-imper/jacobi-1d-imper.c
stencils/jacobi-2d-imper/jacobi-2d-imper.c
stencils/seidel/seidel.c


* To compile a benchmark without any monitoring:

$> gcc -I utilities utilities/instrument.c linear-algebra/kernels/atax/atax.c



* To compile a benchmark with execution time reporting:

$> gcc -I utilities utilities/instrument.c linear-algebra/kernels/atax/atax.c -DPOLYBENCH_TIME


* Available options

They are all passed as macro definitions during compilation time. The
current list is:
- POLYBENCH_TIME: output execution time (gettimeofday)
- POLYBENCH_TEST_MALLOC: use malloc instead of stack allocation
- POLYBENCH_DUMP_ARRAYS: dump all live-out arrays on stderr
- Nxx: override the default dataset value
