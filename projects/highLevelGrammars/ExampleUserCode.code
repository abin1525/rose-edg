class MyTraversal : public SimpleProcessing
   {
     public:
          void visit (SgNode* astNode);
   };

void MyTraversal::visit (SgNode* astNode)
   {
     ROSE_ASSERT (astNode != NULL);

     switch (astNode->variantT(DEFINED_LIBRARY_NAME_Enum) )
        {
       // Common C++ language construct enum
          case V_SgExpressionStatement:
               SgExpressionStatement* expressionStatement = isSgExpressionStatement(astNode);
               break;

       // Specialized enum value that is specific to the binary operator+()
       // for a doubleArray type within an array library.
          case V_doubleArrayBinaryOperatorPlus:
            // BinaryOperatorAttribute* binaryOperator = astNode->attribute.get("DEFINED_LIBRARY_NAME_Abstraction");
               BinaryOperatorAttribute* binaryOperator = isDEFINED_LIBRARY_NAME_Abstraction(astNode);
               break;

       // Everything else
          default:
               printf ("Error, default reached in DEFINED_LIBRARY_NAME_RecognitionTraversal::visit() \n");
               ROSE_ABORT();
        }
   }


