Compass - Parameters
--------------------

[source,c++]
--------------------------------------------------------------------------------
  using namespace Compass;
  using Compass::Parameters;
--------------------------------------------------------------------------------

Input file - compass_parameters.xml
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Compass parameters convey pertinent information to Compass checkers. There are
two categories of parameters:
 +
 +

  - General
  - Checker specific

NOTE: Checker specific parameters are globally accessible to all checkers even
though they are defined independently within the XML configuration file. The
purpose of providing separate namespaces for each checker is simply to avoid
parameter-naming conflicts.
 +


Compass parameters are specified in an XML configuration file. The default
name for this file is `compass_parameters.xml` <<see Example>>.

Input file - location
~~~~~~~~~~~~~~~~~~~~~
The location of the input file is determined according to this pre-determined
algorithm:


1. $COMPASS_PARAMETERS
^^^^^^^^^^^^^^^^^^^^^^
[source,bash]
--------------------------------------------------------------------------------
  #!/bin/bash
  export COMPASS_PARAMETERS=/path/to/compass_parameters.xml
--------------------------------------------------------------------------------

The environment variable `COMPASS_PARAMETERS` explicitly specifies which input
file should be parsed for Compass parameters.

2. Current directory
^^^^^^^^^^^^^^^^^^^^
[source,bash]
--------------------------------------------------------------------------------
  #!/bin/bash
  export COMPASS_PARAMETERS="$(pwd)"/compass_parameters.xml
--------------------------------------------------------------------------------

3. Home directory
^^^^^^^^^^^^^^^^^
[source,bash]
--------------------------------------------------------------------------------
  #!/bin/bash
  export COMPASS_PARAMETERS="$HOME"/compass_parameters.xml
--------------------------------------------------------------------------------

Input file - format
~~~~~~~~~~~~~~~~~~~~~
///////
TODO: include DTD
///////
Parameter values
^^^^^^^^^^^^^^^^
- Leading and trailing whitespace is stripped. TODO: enclose in quotes to
  keep whitespace.


Input file - searching
~~~~~~~~~~~~~~~~~~~~~

[source,c++]
.Basic usage
--------------------------------------------------------------------------------
  # Get parameters from "compass_parameters.xml"
  Compass::Xml::ParametersParser parser;
  Compass::Parameters parameters = parser.get_parameters();

  #
  # Simple string exact match.
  #
  # Get the "global" parameter values from the "AllowedFunctions" namespace.
  #
  Compass::ParameterValues values = parameters["AllowedFunctions::global"];

  #
  # Boost regular expression match.
  #
  # Get all parameters in the namespaces beginning with "Allowed".
  #
  # For example:
  #
  #   AllowedFunctions, AllowedVariables, AllowedCasts, ...
  #
  boost::regex expression("^Allowed.*::");
  Compass::ParametersMap matches = parameters[expression];
--------------------------------------------------------------------------------
/////////
TODO: include output
/////////


[source,c++]
.Debugging usage
--------------------------------------------------------------------------------
include::/Users/too1/Development/projects/rose/compass/compassSupport/compassEmptyMain.C[]
--------------------------------------------------------------------------------
/////////
TODO: include output
/////////
