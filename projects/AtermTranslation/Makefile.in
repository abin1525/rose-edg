# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# These definitions are for the benefit of independent software contained			-*- makefile -*-
# in ROSE.  (Currently, this means SAGE and ROSETTA.)
# It defines ROSE_INCLUDES and ROSE_LIBS so they can use the ROSE codes.

# ROSE_INCLUDES contains the include flags for compiling with ROSE code.
# (ROSE software should set the include paths in their respective Makefile.am
# files, since they are expected to know the ROSE source tree structure.)
# To use ROSE_INCLUDES, the independent software packages contained in ROSE
# should define the variable ROSE_HOME to be the relative path to the root
# of the ROSE directory tree.

# This fixes some problem caused by automake or autoconf
# (detailed documentation is in the ChangeLog)
# MAKE=gmake

# DQ (8/10/2007): Valentin suggested this be commented out.
# DQ (4/23/2006): This is the default when build using automake version 1.6.3 but it
# causes errors so we would like to specify --run automake instead
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake-1.6
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake

# force ranlib to just call touch so that *.so (dynamic libraries) will not
# be run with ranlib (which is a error).  This allows us to use dynamic 
# libraries as the default within ROSE.
# JJW 7/25/2008: Do we really need this?


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@

# DQ (4/16/2016): Removed this test and put it into the Cxx_tests directory since it is 
# a specific problem for Clang testing only.
# test2005_50.C 
# test2007_141.C 
# test2012_188.C 
# test2013_243.C 

# ROSE__CXX_TESTS_WITHOUT_2013_241 = $(ROSE__CXX_TESTS)

# DQ (1/16/2017): If using Clang on Mac OSX we can't test test2013_09.C because header files used are
# implemented using C++11 language features and will not compile in the Cxx_tests which
# assume C++98 langauge standard.  This test code must be compilied using the -std=c++11 option.
# Note: test2004_77.C requires C++11 mode, but also failes in an assertion (in name qualification).
# Note: test2006_20.C requires C++11 mode, and also references bits/stl_algobase.h not present on a Mac.

# DQ (1/18/2017): Changed this to use the proper macro for Mac OSX instead of for Clang.
# if !USING_CLANG_COMPILER
@OS_MACOSX_FALSE@am__append_1 = \
@OS_MACOSX_FALSE@	test2004_77.C \
@OS_MACOSX_FALSE@	test2006_20.C \
@OS_MACOSX_FALSE@	test2011_141.C \
@OS_MACOSX_FALSE@	test2011_142.C \
@OS_MACOSX_FALSE@	test2012_09.C \
@OS_MACOSX_FALSE@	test2013_09.C \
@OS_MACOSX_FALSE@	test2013_164.C \
@OS_MACOSX_FALSE@	test2013_212.C 


# DQ (3/25/2014): These work now with the GNU 4.7 and 4.8 compilers.
# Previously the use if 128 bit integers was not supported in ROSE
# and was a problem for these codes using the GNU 4.7 and 4.8 compilers.
# if !ROSE_USE_EDG_VERSION_4_8
# if !ROSE_USING_GCC_VERSION_LATER_4_6
@USING_CLANG_COMPILER_FALSE@am__append_2 = \
@USING_CLANG_COMPILER_FALSE@	test2005_42.C \
@USING_CLANG_COMPILER_FALSE@	test2012_90.C \
@USING_CLANG_COMPILER_FALSE@	test2013_63.C \
@USING_CLANG_COMPILER_FALSE@	#EXPECTED FAILURE: test2013_242.C 

@ROSE_USING_GCC_VERSION_LATER_6_1_FALSE@@USING_CLANG_COMPILER_FALSE@am__append_3 = \
@ROSE_USING_GCC_VERSION_LATER_6_1_FALSE@@USING_CLANG_COMPILER_FALSE@	test2013_234.C \
@ROSE_USING_GCC_VERSION_LATER_6_1_FALSE@@USING_CLANG_COMPILER_FALSE@	test2013_240.C 

@USING_CLANG_COMPILER_FALSE@am__append_4 = \
@USING_CLANG_COMPILER_FALSE@	test2013_235.C 


# DQ (2/18/2017): Moved test2004_143.C and test2004_149.C to be excluded from CLANG using EDG 4.9.
# DQ (1/28/2017): This fails in EDG for EDG 4.9 using Clang 3.8 header files.
# EDG 4.9 can't handle the header files from later versions of GNU and Clang 
# is using the later version GNU header files (need to configure ROSE with 
# version EDG 4.12 or later).
@ROSE_USE_EDG_VERSION_4_9_FALSE@@USING_CLANG_COMPILER_TRUE@am__append_5 = \
@ROSE_USE_EDG_VERSION_4_9_FALSE@@USING_CLANG_COMPILER_TRUE@	test2004_85.C

@USING_CLANG_COMPILER_FALSE@am__append_6 = \
@USING_CLANG_COMPILER_FALSE@   test2004_85.C 

bin_PROGRAMS = testTranslation_AST_to_ATerm$(EXEEXT) \
	testTranslation_ATerm_to_AST$(EXEEXT) termpretty$(EXEEXT)
subdir = projects/AtermTranslation
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acmacros/canonicalize-symlink.m4 \
	$(top_srcdir)/acmacros/compiler-ar.m4 \
	$(top_srcdir)/acmacros/compiler-id.m4 \
	$(top_srcdir)/acmacros/configure-log.m4 \
	$(top_srcdir)/acmacros/pkg.m4 $(top_srcdir)/acmacros/upc.m4 \
	$(top_srcdir)/config/EDG.m4 $(top_srcdir)/config/ROSE.m4 \
	$(top_srcdir)/config/ac_pkg_swig.m4 \
	$(top_srcdir)/config/acinclude.m4 \
	$(top_srcdir)/config/ax_boost_base.m4 \
	$(top_srcdir)/config/ax_boost_date_time.m4 \
	$(top_srcdir)/config/ax_boost_filesystem.m4 \
	$(top_srcdir)/config/ax_boost_iostreams.m4 \
	$(top_srcdir)/config/ax_boost_program_options.m4 \
	$(top_srcdir)/config/ax_boost_regex.m4 \
	$(top_srcdir)/config/ax_boost_serialization.m4 \
	$(top_srcdir)/config/ax_boost_system.m4 \
	$(top_srcdir)/config/ax_boost_thread.m4 \
	$(top_srcdir)/config/ax_boost_wave.m4 \
	$(top_srcdir)/config/ax_compiler_vendor.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx_14.m4 \
	$(top_srcdir)/config/ax_lib_mysql.m4 \
	$(top_srcdir)/config/ax_lib_sqlite3.m4 \
	$(top_srcdir)/config/ax_lib_xerces.m4 \
	$(top_srcdir)/config/ax_python_devel.m4 \
	$(top_srcdir)/config/ax_with_prog.m4 \
	$(top_srcdir)/config/choose-backend-compiler.m4 \
	$(top_srcdir)/config/compiler-defs.m4 \
	$(top_srcdir)/config/determine-os.m4 \
	$(top_srcdir)/config/enable-rosehpct.m4 \
	$(top_srcdir)/config/generate-backend-compiler-specific-headers.m4 \
	$(top_srcdir)/config/libtool.m4 $(top_srcdir)/config/libxml.m4 \
	$(top_srcdir)/config/ltargz.m4 $(top_srcdir)/config/ltdl.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/mdl_have_opengl_2014.m4 \
	$(top_srcdir)/config/qrose_indigo_1.m4 \
	$(top_srcdir)/config/qrose_indigo_1_windows.m4 \
	$(top_srcdir)/config/support-GraphViz.m4 \
	$(top_srcdir)/config/support-IntelPin.m4 \
	$(top_srcdir)/config/support-accelerator.m4 \
	$(top_srcdir)/config/support-aterm.m4 \
	$(top_srcdir)/config/support-backend-x10.m4 \
	$(top_srcdir)/config/support-backstroke.m4 \
	$(top_srcdir)/config/support-bddbddb.m4 \
	$(top_srcdir)/config/support-binary.m4 \
	$(top_srcdir)/config/support-blacklist.m4 \
	$(top_srcdir)/config/support-boost.m4 \
	$(top_srcdir)/config/support-clang.m4 \
	$(top_srcdir)/config/support-compass2.m4 \
	$(top_srcdir)/config/support-cuda.m4 \
	$(top_srcdir)/config/support-doxygen.m4 \
	$(top_srcdir)/config/support-dwarf.m4 \
	$(top_srcdir)/config/support-edg-debugging.m4 \
	$(top_srcdir)/config/support-edg.m4 \
	$(top_srcdir)/config/support-fatal-rose-warnings.m4 \
	$(top_srcdir)/config/support-frontend-x10.m4 \
	$(top_srcdir)/config/support-gcc-omp.m4 \
	$(top_srcdir)/config/support-git-versioning.m4 \
	$(top_srcdir)/config/support-gmp.m4 \
	$(top_srcdir)/config/support-gomp-omp.m4 \
	$(top_srcdir)/config/support-haskell.m4 \
	$(top_srcdir)/config/support-i386.m4 \
	$(top_srcdir)/config/support-ida.m4 \
	$(top_srcdir)/config/support-insure.m4 \
	$(top_srcdir)/config/support-isl.m4 \
	$(top_srcdir)/config/support-java.m4 \
	$(top_srcdir)/config/support-languages.m4 \
	$(top_srcdir)/config/support-libffi.m4 \
	$(top_srcdir)/config/support-llvm.m4 \
	$(top_srcdir)/config/support-magic.m4 \
	$(top_srcdir)/config/support-maple.m4 \
	$(top_srcdir)/config/support-mint.m4 \
	$(top_srcdir)/config/support-mpi.m4 \
	$(top_srcdir)/config/support-ofp.m4 \
	$(top_srcdir)/config/support-omp.m4 \
	$(top_srcdir)/config/support-php.m4 \
	$(top_srcdir)/config/support-pocc.m4 \
	$(top_srcdir)/config/support-projects.m4 \
	$(top_srcdir)/config/support-purify.m4 \
	$(top_srcdir)/config/support-python.m4 \
	$(top_srcdir)/config/support-readline.m4 \
	$(top_srcdir)/config/support-rose.m4 \
	$(top_srcdir)/config/support-rted.m4 \
	$(top_srcdir)/config/support-rtedupc.m4 \
	$(top_srcdir)/config/support-sanitizer.m4 \
	$(top_srcdir)/config/support-sat.m4 \
	$(top_srcdir)/config/support-ssl.m4 \
	$(top_srcdir)/config/support-stratego.m4 \
	$(top_srcdir)/config/support-valgrind.m4 \
	$(top_srcdir)/config/support-vectorization.m4 \
	$(top_srcdir)/config/support-visualization.m4 \
	$(top_srcdir)/config/support-windows.m4 \
	$(top_srcdir)/config/support-x10.m4 \
	$(top_srcdir)/config/support-yaml.m4 \
	$(top_srcdir)/config/support-yices.m4 \
	$(top_srcdir)/config/support-z3.m4 \
	$(top_srcdir)/config/support_POET.m4 \
	$(top_srcdir)/config/swig_enable_cxx.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/rose_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"
PROGRAMS = $(bin_PROGRAMS)
am_termpretty_OBJECTS = termpretty.$(OBJEXT)
termpretty_OBJECTS = $(am_termpretty_OBJECTS)
termpretty_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
@ROSE_USE_SQLITE_DATABASE_TRUE@am__DEPENDENCIES_2 =  \
@ROSE_USE_SQLITE_DATABASE_TRUE@	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
@ROSE_USE_PHP_TRUE@am__DEPENDENCIES_4 = $(php_path)/lib/libphc.so \
@ROSE_USE_PHP_TRUE@	$(php_path)/lib/libphp5.so \
@ROSE_USE_PHP_TRUE@	$(am__DEPENDENCIES_1)
@ROSE_USE_QT_TRUE@am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1)
@ROSE_WITH_LIBREADLINE_TRUE@am__DEPENDENCIES_6 =  \
@ROSE_WITH_LIBREADLINE_TRUE@	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_7 = $(abspath $(top_builddir)/src/librose.la) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(ROSE_YICES_LIBS_WITH_PATH) \
	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_1) \
	$(ROSE_GUI_LIBS_WITH_PATH) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_1)
termpretty_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_7) \
	$(ATERM_LIB_DIR)/libATerm.a
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_testTranslation_AST_to_ATerm_OBJECTS =  \
	testTranslation_AST_to_ATerm.$(OBJEXT)
testTranslation_AST_to_ATerm_OBJECTS =  \
	$(am_testTranslation_AST_to_ATerm_OBJECTS)
testTranslation_AST_to_ATerm_LDADD = $(LDADD)
testTranslation_AST_to_ATerm_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_7) $(ATERM_LIB_DIR)/libATerm.a
am_testTranslation_ATerm_to_AST_OBJECTS =  \
	testTranslation_ATerm_to_AST.$(OBJEXT)
testTranslation_ATerm_to_AST_OBJECTS =  \
	$(am_testTranslation_ATerm_to_AST_OBJECTS)
testTranslation_ATerm_to_AST_LDADD = $(LDADD)
testTranslation_ATerm_to_AST_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_7) $(ATERM_LIB_DIR)/libATerm.a
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp =
am__depfiles_maybe =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(LEX) $(AM_LFLAGS) $(LFLAGS)
AM_V_LEX = $(am__v_LEX_@AM_V@)
am__v_LEX_ = $(am__v_LEX_@AM_DEFAULT_V@)
am__v_LEX_0 = @echo "  LEX     " $@;
am__v_LEX_1 = 
YLWRAP = $(top_srcdir)/config/ylwrap
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(termpretty_SOURCES) \
	$(testTranslation_AST_to_ATerm_SOURCES) \
	$(testTranslation_ATerm_to_AST_SOURCES)
DIST_SOURCES = $(termpretty_SOURCES) \
	$(testTranslation_AST_to_ATerm_SOURCES) \
	$(testTranslation_ATerm_to_AST_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
HEADERS = $(include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs \
	$(top_srcdir)/config/mkinstalldirs $(top_srcdir)/config/ylwrap \
	$(top_srcdir)/tests/nonsmoke/functional/input_codes/cxx/Makefile_variables \
	README termpretty.c++
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ABS_COMPASS2_XML_SRCDIR = @ABS_COMPASS2_XML_SRCDIR@
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ATERM_BIN_PATH = @ATERM_BIN_PATH@
ATERM_INSTALL_PATH = @ATERM_INSTALL_PATH@
ATERM_LIBRARY_PATH = @ATERM_LIBRARY_PATH@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AUX_LINKER = @AUX_LINKER@
AWK = @AWK@
Axx_INCLUDES = @Axx_INCLUDES@
Axx_LIBS = @Axx_LIBS@
BACKEND_COMPILER_VERSION_MAJOR_NUMBER = @BACKEND_COMPILER_VERSION_MAJOR_NUMBER@
BACKEND_COMPILER_VERSION_MINOR_NUMBER = @BACKEND_COMPILER_VERSION_MINOR_NUMBER@
BACKEND_COMPILER_VERSION_NAME = @BACKEND_COMPILER_VERSION_NAME@
BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER = @BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER@
BACKEND_CXX_COMPILER = @BACKEND_CXX_COMPILER@
BACKEND_CXX_VENDOR_AND_VERSION2 = @BACKEND_CXX_VENDOR_AND_VERSION2@
BACKEND_CXX_VENDOR_AND_VERSION3 = @BACKEND_CXX_VENDOR_AND_VERSION3@
BACKEND_C_COMPILER = @BACKEND_C_COMPILER@
BACKEND_FORTRAN_COMPILER = @BACKEND_FORTRAN_COMPILER@
BACKEND_JAVA_COMPILER = @BACKEND_JAVA_COMPILER@
BACKEND_X10_COMPILER = @BACKEND_X10_COMPILER@
BACKSTROKE_ROSS_INCLUDE = @BACKSTROKE_ROSS_INCLUDE@
BACKSTROKE_SPEEDES_INCLUDE = @BACKSTROKE_SPEEDES_INCLUDE@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_DATE_TIME_LIB = @BOOST_DATE_TIME_LIB@
BOOST_FILESYSTEM_LIB = @BOOST_FILESYSTEM_LIB@
BOOST_IOSTREAMS_LIB = @BOOST_IOSTREAMS_LIB@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@
BOOST_REGEX_LIB = @BOOST_REGEX_LIB@
BOOST_SERIALIZATION_LIB = @BOOST_SERIALIZATION_LIB@
BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@
BOOST_THREAD_LIB = @BOOST_THREAD_LIB@
BOOST_WAVE_LIB = @BOOST_WAVE_LIB@
CANDL_PATH = @CANDL_PATH@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CCLD = @CCLD@
CFLAGS = @CFLAGS@
CFLAGS32 = @CFLAGS32@
CLANG_CXXFLAGS = @CLANG_CXXFLAGS@
CLANG_LDFLAGS = @CLANG_LDFLAGS@
CLANG_LIBDIR = @CLANG_LIBDIR@
CLASSPATH = @CLASSPATH@
CLOOG_PATH = @CLOOG_PATH@
CPP = @CPP@

# DQ (9/27/2015): Added to support new use of AM_CPPFLAGS instead of INCLUDES 
# (depreicated in automake and for which many warnings are generated).
CPPFLAGS = $(AM_CPPFLAGS)
CUDA_BIN_DIR = @CUDA_BIN_DIR@
CUDA_INC_DIR = @CUDA_INC_DIR@
CUDA_LIB_DIR = @CUDA_LIB_DIR@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXLD = @CXXLD@
CXX_DEBUG = @CXX_DEBUG@
CXX_OPTIMIZE = @CXX_OPTIMIZE@
CXX_SHARED_LIB_UPDATE = @CXX_SHARED_LIB_UPDATE@
CXX_STATIC_LIB_UPDATE = @CXX_STATIC_LIB_UPDATE@
CXX_TEMPLATE_OBJECTS = @CXX_TEMPLATE_OBJECTS@
CXX_TEMPLATE_REPOSITORY_PATH = @CXX_TEMPLATE_REPOSITORY_PATH@
CXX_WARNINGS = @CXX_WARNINGS@
CYGPATH_W = @CYGPATH_W@
C_DEBUG = @C_DEBUG@
C_OPTIMIZE = @C_OPTIMIZE@
C_WARNINGS = @C_WARNINGS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLIB_PREFIX = @DLIB_PREFIX@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DOXYGEN_ADDED_DIRECTORY_1 = @DOXYGEN_ADDED_DIRECTORY_1@
DOXYGEN_ADDED_DIRECTORY_2 = @DOXYGEN_ADDED_DIRECTORY_2@
DOXYGEN_ENABLED_SECTIONS = @DOXYGEN_ENABLED_SECTIONS@
DOXYGEN_EXTRACT_ALL = @DOXYGEN_EXTRACT_ALL@
DOXYGEN_EXTRACT_PRIVATE = @DOXYGEN_EXTRACT_PRIVATE@
DOXYGEN_EXTRACT_STATIC = @DOXYGEN_EXTRACT_STATIC@
DOXYGEN_HIDE_FRIEND_COMPOUNDS = @DOXYGEN_HIDE_FRIEND_COMPOUNDS@
DOXYGEN_HIDE_UNDOC_CLASSES = @DOXYGEN_HIDE_UNDOC_CLASSES@
DOXYGEN_HIDE_UNDOC_MEMBERS = @DOXYGEN_HIDE_UNDOC_MEMBERS@
DOXYGEN_INTERNAL_DOCS = @DOXYGEN_INTERNAL_DOCS@
DOXYGEN_USE_TAG_FILE = @DOXYGEN_USE_TAG_FILE@
DOXYINDEXER = @DOXYINDEXER@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETHER_PREFIX = @ETHER_PREFIX@
EXE = @EXE@
EXEEXT = @EXEEXT@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FLTK_include_path = @FLTK_include_path@
FLTK_libs_path = @FLTK_libs_path@
FRONTEND_CXX_VENDOR_AND_VERSION2 = @FRONTEND_CXX_VENDOR_AND_VERSION2@
FRONTEND_CXX_VENDOR_AND_VERSION3 = @FRONTEND_CXX_VENDOR_AND_VERSION3@
GCC_MINOR_VERSION = @GCC_MINOR_VERSION@
GCC_VERSION = @GCC_VERSION@
GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX = @GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX@
GEN_BE = @GEN_BE@
GFORTRAN_PATH = @GFORTRAN_PATH@
GHCBIN = @GHCBIN@
GLUT_CFLAGS = @GLUT_CFLAGS@
GLUT_LIBS = ${glut_path}
GLUT_include_path = @GLUT_include_path@
GLUT_libs_path = @GLUT_libs_path@
GL_CFLAGS = @GL_CFLAGS@
GL_LIBS = @GL_LIBS@
GMP_INCLUDE_PATH = @GMP_INCLUDE_PATH@
GMP_INSTALL_PATH = @GMP_INSTALL_PATH@
GMP_LIBRARY_PATH = @GMP_LIBRARY_PATH@
GREP = @GREP@
GraphViz_include_path = @GraphViz_include_path@
GraphViz_libs_path = @GraphViz_libs_path@
HAVE_CXX11 = @HAVE_CXX11@
HAVE_CXX14 = @HAVE_CXX14@
HS_CONFIG_OPTS = @HS_CONFIG_OPTS@
INCLTDL = @INCLTDL@
INCLUDE_COMPASS_MAKEFILE_INC = @INCLUDE_COMPASS_MAKEFILE_INC@
INDENT = @INDENT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSURE_OPTIONS = @INSURE_OPTIONS@
ISL_INCLUDE_PATH = @ISL_INCLUDE_PATH@
ISL_INSTALL_PATH = @ISL_INSTALL_PATH@
ISL_LIBRARY_PATH = @ISL_LIBRARY_PATH@
IntelPin_path = @IntelPin_path@
JAR = @JAR@
JAVA = @JAVA@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JAVA_JVM_INCLUDE = @JAVA_JVM_INCLUDE@
JAVA_JVM_LINK = @JAVA_JVM_LINK@
JAVA_JVM_PATH = @JAVA_JVM_PATH@
JAVA_PATH = @JAVA_PATH@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBADD_DL = @LIBADD_DL@
LIBADD_DLD_LINK = @LIBADD_DLD_LINK@
LIBADD_DLOPEN = @LIBADD_DLOPEN@
LIBADD_SHL_LOAD = @LIBADD_SHL_LOAD@
LIBDWARF_CPPFLAGS = @LIBDWARF_CPPFLAGS@
LIBDWARF_LDFLAGS = @LIBDWARF_LDFLAGS@
LIBDWARF_PREFIX = @LIBDWARF_PREFIX@
LIBFFI_CFLAGS = @LIBFFI_CFLAGS@
LIBFFI_LIBS = @LIBFFI_LIBS@
LIBLTDL = @LIBLTDL@
LIBOBJS = @LIBOBJS@
LIBREADLINE_INCLUDE_PATH = @LIBREADLINE_INCLUDE_PATH@
LIBREADLINE_INSTALL_PATH = @LIBREADLINE_INSTALL_PATH@
LIBREADLINE_LIBRARY_PATH = @LIBREADLINE_LIBRARY_PATH@
LIBREADLINE_LIBS = @LIBREADLINE_LIBS@
LIBS = @LIBS@
LIBS_WITH_RPATH = @LIBS_WITH_RPATH@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LLVM_CONFIG = @LLVM_CONFIG@
LN_S = @LN_S@
LTDLDEPS = @LTDLDEPS@
LTDLINCL = @LTDLINCL@
LTDLOPEN = @LTDLOPEN@
LTLIBOBJS = @LTLIBOBJS@
LT_ARGZ_H = @LT_ARGZ_H@
LT_CONFIG_H = @LT_CONFIG_H@
LT_DLLOADERS = @LT_DLLOADERS@
LT_DLPREOPEN = @LT_DLPREOPEN@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MAPLE_INCLUDES = @MAPLE_INCLUDES@
MAPLE_LIBDIR = @MAPLE_LIBDIR@
MAPLE_LIBS = @MAPLE_LIBS@
MD5 = @MD5@
MINT = @MINT@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MPICC = @MPICC@
MPICXX = @MPICXX@
MPIF77 = @MPIF77@
MPIFC = @MPIFC@
MYSQL_CFLAGS = @MYSQL_CFLAGS@
MYSQL_CONFIG = @MYSQL_CONFIG@
MYSQL_INCLUDE = @MYSQL_INCLUDE@
MYSQL_LDFLAGS = @MYSQL_LDFLAGS@
MYSQL_VERSION = @MYSQL_VERSION@
NM = @NM@
NMEDIT = @NMEDIT@
NVCCBIN = @NVCCBIN@
OBJ = @OBJ@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENCL_INC_DIR = @OPENCL_INC_DIR@
OPENCL_LIB_DIR = @OPENCL_LIB_DIR@
OPEN_FORTRAN_PARSER_PATH = @OPEN_FORTRAN_PARSER_PATH@
OPTIONAL_PROJECTS = @OPTIONAL_PROJECTS@
OS_major_release_number = @OS_major_release_number@
OS_minor_release_number = @OS_minor_release_number@
OS_release = @OS_release@
OS_vendor = @OS_vendor@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PACKAGE_VERSION_NUMERIC = @PACKAGE_VERSION_NUMERIC@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
POET_INCL = @POET_INCL@
POET_LIB = @POET_LIB@
PPL_PATH = @PPL_PATH@
PURIFY_OPTIONS = @PURIFY_OPTIONS@
PYTHON = @PYTHON@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
PYTHON_EXTRA_LDFLAGS = @PYTHON_EXTRA_LDFLAGS@
PYTHON_EXTRA_LIBS = @PYTHON_EXTRA_LIBS@
PYTHON_LDFLAGS = @PYTHON_LDFLAGS@
PYTHON_SITE_PKG = @PYTHON_SITE_PKG@
Pxx_INCLUDES = @Pxx_INCLUDES@
Pxx_LIBS = @Pxx_LIBS@
QROSE_PREFIX = @QROSE_PREFIX@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
QT_VERSION = @QT_VERSION@
QT_VERSION_MAJOR = @QT_VERSION_MAJOR@
QT_VERSION_MINOR = @QT_VERSION_MINOR@
RANLIB = @RANLIB@
RCC = @RCC@
ROSEHPCT_DEP_INCLUDES = @ROSEHPCT_DEP_INCLUDES@
ROSEHPCT_DEP_LIBS = @ROSEHPCT_DEP_LIBS@
ROSE_BOOST_NORMAL_INCLUDE_PATH = @ROSE_BOOST_NORMAL_INCLUDE_PATH@

# DQ (12/22/2008): Specification of Boost path for use with "-isystem" option (may be GNU
# specific).  We use this option only if the configuration of ROSE has detected a
# previously installed version of Boost (which we do not want to use). 
# Note that only one of these will be non-empty makefile variables.
ROSE_BOOST_PREINCLUDE_PATH = @ROSE_BOOST_PREINCLUDE_PATH@
ROSE_EDG_MAJOR_VERSION_NUMBER = @ROSE_EDG_MAJOR_VERSION_NUMBER@
ROSE_EDG_MINOR_VERSION_NUMBER = @ROSE_EDG_MINOR_VERSION_NUMBER@
ROSE_HOME = @ROSE_HOME@
ROSE_LIBMAGIC_PREFIX = @ROSE_LIBMAGIC_PREFIX@
ROSE_LSB_RELEASE = @ROSE_LSB_RELEASE@
ROSE_OBJDUMP_PATH = @ROSE_OBJDUMP_PATH@
ROSE_OFP_JAR_FILE = @ROSE_OFP_JAR_FILE@
ROSE_OFP_MAJOR_VERSION_NUMBER = @ROSE_OFP_MAJOR_VERSION_NUMBER@
ROSE_OFP_MINOR_VERSION_NUMBER = @ROSE_OFP_MINOR_VERSION_NUMBER@
ROSE_OFP_PATCH_VERSION_NUMBER = @ROSE_OFP_PATCH_VERSION_NUMBER@
ROSE_OFP_VERSION_NUMBER = @ROSE_OFP_VERSION_NUMBER@
ROSE_PS2PDF_PATH = @ROSE_PS2PDF_PATH@
ROSE_SUPPORT_GNU_EXTENSIONS = @ROSE_SUPPORT_GNU_EXTENSIONS@
ROSE_SUPPORT_MICROSOFT_EXTENSIONS = @ROSE_SUPPORT_MICROSOFT_EXTENSIONS@
ROSE_USE_CANDL = @ROSE_USE_CANDL@
ROSE_USE_CLOOG = @ROSE_USE_CLOOG@
ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT = @ROSE_USE_FATAL_ROSE_WARNINGS_SUPPORT@
ROSE_USE_PPL = @ROSE_USE_PPL@
ROSE_USE_SCOPLIB = @ROSE_USE_SCOPLIB@
ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT = @ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT@
ROSE_WGET_PATH = @ROSE_WGET_PATH@
ROSE_WITH_MPI_CFLAGS = @ROSE_WITH_MPI_CFLAGS@
ROSE_WITH_MPI_CLDFLAGS = @ROSE_WITH_MPI_CLDFLAGS@
ROSE_WITH_MPI_CXXFLAGS = @ROSE_WITH_MPI_CXXFLAGS@
ROSE_WITH_MPI_CXXLDFLAGS = @ROSE_WITH_MPI_CXXLDFLAGS@
ROSE_WITH_MPI_F77FLAGS = @ROSE_WITH_MPI_F77FLAGS@
ROSE_WITH_MPI_F77LDFLAGS = @ROSE_WITH_MPI_F77LDFLAGS@
ROSE_WITH_MPI_FFLAGS = @ROSE_WITH_MPI_FFLAGS@
ROSE_WITH_MPI_FLDFLAGS = @ROSE_WITH_MPI_FLDFLAGS@
ROSE_YAML_PREFIX = @ROSE_YAML_PREFIX@
ROSE_YICES = @ROSE_YICES@
ROSE_YICES_PREFIX = @ROSE_YICES_PREFIX@
RT_LIBS = @RT_LIBS@
SCOPLIB_PATH = @SCOPLIB_PATH@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SQLITE3_CFLAGS = @SQLITE3_CFLAGS@
SQLITE3_LDFLAGS = @SQLITE3_LDFLAGS@
SQLITE3_VERSION = @SQLITE3_VERSION@
STRATEGO_BIN_PATH = @STRATEGO_BIN_PATH@
STRATEGO_INSTALL_PATH = @STRATEGO_INSTALL_PATH@
STRATEGO_LIBRARY_PATH = @STRATEGO_LIBRARY_PATH@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
TCLSH = @TCLSH@
TEST_SMT_SOLVER = @TEST_SMT_SOLVER@
UIC = @UIC@
UPC = @UPC@
UPCDEPMODE = @UPCDEPMODE@
UPCFLAGS = @UPCFLAGS@
USING_WINDOWS = @USING_WINDOWS@
VALGRIND_BINARY = @VALGRIND_BINARY@
VALGRIND_BIN_PATH = @VALGRIND_BIN_PATH@
VALGRIND_INCLUDE_PATH = @VALGRIND_INCLUDE_PATH@
VALGRIND_INSTALL_PATH = @VALGRIND_INSTALL_PATH@
VALGRIND_LIBRARY_PATH = @VALGRIND_LIBRARY_PATH@
VECTORIZATION = @VECTORIZATION@
VERSION = @VERSION@
WT_PREFIX = @WT_PREFIX@
X10_BIN_PATH = @X10_BIN_PATH@
X10_INSTALL_PATH = @X10_INSTALL_PATH@
X10_LIBRARY_PATH = @X10_LIBRARY_PATH@
X10_VERSION = @X10_VERSION@
XERCES_CPPFLAGS = @XERCES_CPPFLAGS@
XERCES_LDFLAGS = @XERCES_LDFLAGS@
XERCES_LIBS = @XERCES_LIBS@
XERCES_VERSION = @XERCES_VERSION@
XMKMF = @XMKMF@
XML2_CONFIG = @XML2_CONFIG@
XML_CPPFLAGS = @XML_CPPFLAGS@
XML_LIBS = @XML_LIBS@
YACC = @YACC@
YFLAGS = @YFLAGS@
Z3BIN = @Z3BIN@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
absolute_path_srcdir = @absolute_path_srcdir@
ac_boost_path = @ac_boost_path@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
ac_ct_MPICXX = @ac_ct_MPICXX@
ac_ct_UPC = @ac_ct_UPC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
backstroke_ross_path = @backstroke_ross_path@
backstroke_speedes_path = @backstroke_speedes_path@
bddbddb_path = @bddbddb_path@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_triplet_without_redhat = @build_triplet_without_redhat@
build_vendor = @build_vendor@
builddir = @builddir@
configure_date = @configure_date@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
edg_union_struct_debugging_value = @edg_union_struct_debugging_value@
exec_prefix = @exec_prefix@
glut_path = @glut_path@
gomp_omp_runtime_library_path = @gomp_omp_runtime_library_path@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
ida_path = @ida_path@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
insure_BIN = @insure_BIN@
insure_LIBS = @insure_LIBS@
insure_PREFIX = @insure_PREFIX@
libdir = @libdir@
libexecdir = @libexecdir@
llvm_path = @llvm_path@
localedir = @localedir@
localstatedir = @localstatedir@
ltdl_LIBOBJS = @ltdl_LIBOBJS@
ltdl_LTLIBOBJS = @ltdl_LTLIBOBJS@
mandir = @mandir@
maple_path = @maple_path@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
omni_omp_runtime_support_path = @omni_omp_runtime_support_path@
optional_Visualization_subdirs = @optional_Visualization_subdirs@
parallel_ast_traversal_omp_path = @parallel_ast_traversal_omp_path@
pdfdir = @pdfdir@
php_path = @php_path@
poet_dir = @poet_dir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
purify_BIN = @purify_BIN@
purify_INCLUDES = @purify_INCLUDES@
purify_LIBS = @purify_LIBS@
purify_PREFIX = @purify_PREFIX@
res_top_src = @res_top_src@
rted_path = @rted_path@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sys_symbol_underscore = @sys_symbol_underscore@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_pwd = @top_pwd@
top_srcdir = @top_srcdir@
wine_path = @wine_path@

# SQLite is a simpler database to use than MySQL
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS)
@ROSE_USE_SQLITE_DATABASE_TRUE@SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS) -I$(top_srcdir)/src/roseExtensions/sqlite3x
@ROSE_USE_SQLITE_DATABASE_TRUE@SQLITE_DATABASE_LIBS = $(SQLITE3_LDFLAGS)
#   ROSE_SQLITE_DATABASE_OBJS     = $(top_builddir)/src/roseExtensions/sqlite3x/*o
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIB_NAME = RoseSQLite3xDatabase
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIB_FILE = lib$(ROSE_SQLITE_DATABASE_LIB_NAME).la
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIBS = -l$(ROSE_SQLITE_DATABASE_LIB_NAME)
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SIDEEFFECT_INCLUDE = -I$(top_srcdir)/src/midend/programAnalysis/sideEffectAnalysis

# This is properly handled by automake even when specified in an include file
EDG_LIBS = @EDG_LIBS@

# Conditional support for Gabriel's QRose GUI Library 
#  ROSE_GUI_INCLUDE =   -I${QROSE_PREFIX}/include
@ROSE_USE_QT_TRUE@ROSE_GUI_INCLUDE = -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/Common -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/TreeBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/SourceBox

# ROSE_GUI_LIBS = -lqrose
#  ROSE_GUI_LIBS_WITH_PATH = -L${QROSE_PREFIX}/lib -lqrose
#  ROSE_GUI_LIBS_WITH_PATH =  -L${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/  -lqrose
@ROSE_USE_QT_TRUE@ROSE_GUI_LIBS_WITH_PATH = ${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/libqrose.la

# ROSE_GUI_LIB_FILE = libqrose.a
@ROSE_USE_QT_TRUE@ROSE_QT_INCLUDE = $(QT_INCLUDES)
# ROSE_QT_LIBS = -lqt
@ROSE_USE_QT_TRUE@ROSE_QT_LIBS_WITH_PATH = ${QT_LDFLAGS}
# ROSE_QT_LIB_FILE = libqt.a

# ROSE-HPCToolkit module
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_INCLUDES = -I$(top_srcdir)/src/roseExtensions/roseHPCToolkit/include
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_LIBS = -lrosehpct
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_LIBS_WITH_PATH = $(top_builddir)/src/roseExtensions/roseHPCToolkit/src/librosehpct.la
# ROSE_ROSEHPCT_LIB_FILE = librosehpct.so

# ROSE-YICES Package (destributed by SRI as a static library)
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_INCLUDES = -I@ROSE_YICES_PREFIX@/include
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_LIBS = -lyices
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_LIBS_WITH_PATH = @ROSE_YICES_PREFIX@/lib/libyices.a

# YAML-CPP package for parsing YAML/JSON files
@ROSE_HAVE_LIBYAML_TRUE@ROSE_YAML_INCLUDES = -I@ROSE_YAML_PREFIX@/include
@ROSE_HAVE_LIBYAML_TRUE@ROSE_YAML_LIBS = -lyaml-cpp
@ROSE_HAVE_LIBYAML_TRUE@ROSE_YAML_LIBS_WITH_PATH = -L@ROSE_YAML_PREFIX@/lib -lyaml-cpp

# GNU readline
@ROSE_WITH_LIBREADLINE_TRUE@ROSE_READLINE_INCLUDES = -I@LIBREADLINE_INCLUDE_PATH@
@ROSE_WITH_LIBREADLINE_TRUE@ROSE_READLINE_LIBS = @LIBREADLINE_LIBS@
@ROSE_WITH_LIBREADLINE_TRUE@ROSE_READLINE_LIBS_WITH_PATH = -L@LIBREADLINE_LIBRARY_PATH@ $(ROSE_READLINE_LIBS)

# libmagic for identifying file types based on magic numbers
@ROSE_HAVE_LIBMAGIC_TRUE@ROSE_LIBMAGIC_INCLUDES = -I@ROSE_LIBMAGIC_PREFIX@/include
@ROSE_HAVE_LIBMAGIC_TRUE@ROSE_LIBMAGIC_LIBS = -lmagic
@ROSE_HAVE_LIBMAGIC_TRUE@ROSE_LIBMAGIC_LIBS_WITH_PATH = -L@ROSE_LIBMAGIC_PREFIX@/lib -lmagic

# Math algorithms from http://dlib.net. This is a headers-only library neede by some binary analyses.
@ROSE_HAVE_DLIB_TRUE@ROSE_DLIB_INCLUDES = -I@DLIB_PREFIX@
@ROSE_HAVE_DLIB_TRUE@ROSE_DLIB_LIBS = 
@ROSE_HAVE_DLIB_TRUE@ROSE_DLIB_LIBS_WITH_PATH = 

# DQ (11/4/2016): Adding support for use of Address Sanitizer (for where the ROSE Test Handler (RTH) is used.
# Note the quotes and escapes that are required:
ADDRESS_SANITIZER_OPTIONS = "ASAN_OPTIONS=symbolize=1:detect_leaks=0 ASAN_SYMBOLIZER_PATH=\`which llvm-symbolizer\`"

# DQ(11/4/2016): Need a version when not using the ROSE Test Handler (RTH):
NON_RTH_ADDRESS_SANITIZER_OPTIONS = ASAN_OPTIONS=symbolize=1:detect_leaks=0 ASAN_SYMBOLIZER_PATH=`which llvm-symbolizer`

# ROSE-DWARF libdwarf support
@ROSE_HAVE_LIBDWARF_TRUE@ROSE_DWARF_INCLUDES = $(LIBDWARF_CPPFLAGS)
# DQ (3/15/2009): Use the usual static linking when not using Intel Pin (what we used to do).
# DQ (3/13/2009): Fixup libdwarf support in ROSE to always use the dynamic (shared) library.
# ROSE_DWARF_LIBS_WITH_PATH = -Wl,--rpath $(LIBDWARF_PREFIX/lib) -L$(LIBDWARF_PREFIX/lib) -ldwarf -lelf
# DQ (6/5/2010): Fixed to use the value set in the configure step (requires the dynamic library).
# ROSE_DWARF_LIBS_WITH_PATH = $(LIBDWARF_PREFIX)/lib/libdwarf.a -lelf
@ROSE_HAVE_LIBDWARF_TRUE@@ROSE_USE_INTEL_PIN_FALSE@ROSE_DWARF_LIBS_WITH_PATH = @LIBDWARF_LDFLAGS@

# DQ (3/13/2009): These do not appear to be used anywhere.
# ROSE_DWARF_LIBS = -ldwarf
# ROSE_DWARF_LIB_FILE = libdwarf.a

# DQ (3/13/2009):
# If Dwarf is used with Intel Pin then reference the same copy of libdwarf.a (in the same
# directory).  However, it does NOT work to link both references to libdwarf into more
# than one dynamic (shared) library, so we need to link libdwarf dynamically.
# To avoid additional LD_LIBRARY_PATH requirements, we do so using rpath.
# To support this the libdwarf.so should be placed into $(INTEL_PIN_PATH)/intel64/lib-ext
# and the static libdwarf.a moved out (renamed) so that it will not be used.
# Note that this will also cause librose.so to use the shared library for 
# dwarf when used with Intel Pin.
# ROSE_DWARF_LIBS_WITH_PATH = $(INTEL_PIN_PATH)/intel64/lib-ext/libdwarf.a -lelf
# ROSE_DWARF_LIBS_WITH_PATH = -Wl,--rpath $(INTEL_PIN_PATH)/intel64/lib-ext -L$(INTEL_PIN_PATH)/intel64/lib-ext -ldwarf -lelf
@ROSE_HAVE_LIBDWARF_TRUE@@ROSE_USE_INTEL_PIN_TRUE@ROSE_DWARF_LIBS_WITH_PATH = -L$(INTEL_PIN_PATH)/intel64/lib-ext -ldwarf -lelf
# DQ (3/14/2009): This factors the lib paths.
@ROSE_HAVE_LIBDWARF_TRUE@@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_WITH_DWARF_LIBS_PATH = $(INTEL_PIN_LIB_PATHS) -lpin -lxed -ldl $(ROSE_DWARF_LIBS_WITH_PATH)

# ROSE-WINE Package (Wine is a package to permit execution of Windows binaries under Linux)
@ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_TRUE@ROSE_WINE_INCLUDES = -I$(wine_path)/include
@ROSE_USE_PHP_TRUE@ROSE_PHP_INCLUDES = -I$(php_path)/include/phc -I$(php_path)/include/php
@ROSE_USE_PHP_TRUE@ROSE_PHP_LIBS = -lphp5 -lphc -lltdl
@ROSE_USE_PHP_TRUE@ROSE_PHP_LIBS_WITH_PATH = $(php_path)/lib/libphc.so $(php_path)/lib/libphp5.so $(LIBLTDL)

# ASR (06/09/2010): adding llvm support variables
@ROSE_USE_LLVM_TRUE@ROSE_LLVM_INCLUDES = -I$(llvm_path)/include
@ROSE_USE_LLVM_TRUE@ROSE_LLVM_LIBS = -L$(llvm_path)/lib \
@ROSE_USE_LLVM_TRUE@	-lLLVMXCoreCodeGen -lLLVMXCoreAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMXCoreInfo -lLLVMSystemZCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMSystemZAsmPrinter -lLLVMSystemZInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMSparcCodeGen -lLLVMSparcAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMSparcInfo -lLLVMPowerPCCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMPowerPCAsmPrinter -lLLVMPowerPCInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMpic16passes -lLLVMPIC16AsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMPIC16CodeGen -lLLVMPIC16Info \
@ROSE_USE_LLVM_TRUE@	-lLLVMMSP430CodeGen -lLLVMMSP430AsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMMSP430Info -lLLVMMSIL -lLLVMMSILInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMMipsAsmPrinter -lLLVMMipsCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMMipsInfo -lLLVMMBlazeAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMMBlazeCodeGen -lLLVMMBlazeInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMLinker -lLLVMipo -lLLVMInterpreter \
@ROSE_USE_LLVM_TRUE@	-lLLVMInstrumentation -lLLVMJIT \
@ROSE_USE_LLVM_TRUE@	-lLLVMExecutionEngine -lLLVMCppBackend \
@ROSE_USE_LLVM_TRUE@	-lLLVMCppBackendInfo -lLLVMCellSPUCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMCellSPUAsmPrinter -lLLVMCellSPUInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMCBackend -lLLVMCBackendInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinInfo -lLLVMBitWriter \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86Disassembler -lLLVMX86AsmParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86AsmPrinter -lLLVMX86CodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86Info -lLLVMAsmParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMAsmParser -lLLVMMCParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMAsmPrinter -lLLVMARMCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMInfo -lLLVMArchive \
@ROSE_USE_LLVM_TRUE@	-lLLVMBitReader -lLLVMAlphaCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMSelectionDAG -lLLVMAlphaAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMAsmPrinter -lLLVMCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMScalarOpts -lLLVMInstCombine \
@ROSE_USE_LLVM_TRUE@	-lLLVMTransformUtils -lLLVMipa \
@ROSE_USE_LLVM_TRUE@	-lLLVMAnalysis -lLLVMTarget -lLLVMMC \
@ROSE_USE_LLVM_TRUE@	-lLLVMCore -lLLVMAlphaInfo -lLLVMSupport \
@ROSE_USE_LLVM_TRUE@	-lLLVMSystem

# adding all libraries for now

# SSL support permits use of MD5 checksums internally for binary library identification.
@ROSE_USE_SSL_SUPPORT_TRUE@ROSE_SSL_LIBS = -lssl -lcrypto

# support for precompiled headers
@ROSE_PCH_TRUE@ROSE_PCH_INCLUDE = -Winvalid-pch -fPIC -DPIC
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_PATH = @IntelPin_path@
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_INCLUDE_PATHS = -I$(INTEL_PIN_PATH)/source/include -I$(INTEL_PIN_PATH)/source/include/gen -I$(INTEL_PIN_PATH)/extras/xed2-intel64/include -I$(INTEL_PIN_PATH)/source/tools/InstLib

# DQ (3/8/2009): These cause rose/src/testSharedRoseLib to fail, I don't know why (fails in system call to map()).
# INTEL_PIN_LIB_PATHS     = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib -L$(INTEL_PIN_PATH)/intel64/lib-ext
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_LIB_PATHS = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib

# Do we want to handle this differently when Dwarf is used optionally with ROSE.
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_LIBS = -lpin -lxed -ldwarf -lelf -ldl
#if ROSE_HAVE_LIBDWARF
#  INTEL_PIN_LIBS          = -lpin -lxed -lelf -ldl
#else
#  INTEL_PIN_LIBS          = -lpin -lxed -ldwarf -lelf -ldl
#endif
@ROSE_USE_ETHER_TRUE@ROSE_ETHER_INCLUDE = -I$(ETHER_PREFIX)/include
@ROSE_USE_ETHER_TRUE@ROSE_ETHER_LIBS = -L$(ETHER_PREFIX)/lib -lxenctrl
@ROSE_WITH_ATERM_TRUE@ROSE_ATERM_INCLUDE = -I$(ATERM_LIBRARY_PATH)/../include
@ROSE_WITH_ATERM_TRUE@ROSE_ATERM_LIBS = -L$(ATERM_LIBRARY_PATH) -lATerm

#   libroseExperimentalOpenFortranParserlibraries = frontend/Experimental_OpenFortranParser_ROSE_Connection/aterm_traversal/libexperimentalRoseFortran.la

# DQ (9/26/2015): This is defined in src/Makefile.am
#   libroseExperimentalOpenFortranParserlibraries =
#   ROSE_EXPERIMENTAL_OFP_INCLUDE = -I$(_PREFIX)/include
#   ROSE_EXPERIMENTAL_OFP_LIBS    = -L$(top_builddir)/src/frontend/Experimental_OpenFortranParser_ROSE_Connection/aterm_traversal -lexperimentalRoseFortran

# DQ (1/26/2017): This is not built in the new way that Craig and I are working together on the new OFP.
@ROSE_EXPERIMENTAL_OFP_ROSE_CONNECTION_TRUE@ROSE_EXPERIMENTAL_OFP_LIBS = -L$(top_builddir)/src/3rdPartyLibraries/experimental-fortran-parser/aterm_traversal -lexperimentalOFP
#   ROSE_EXPERIMENTAL_OFP_LIBS    = 

# DQ (1/9/2010): Added use of libimf with libm (the two go together when using Intel icc and icpc)
#  ROSE_INTEL_COMPILER_MATH_LIBS = -limf -lm
#    ROSE_INTEL_COMPILER_MATH_LIBS += -limf
@USING_INTEL_COMPILER_TRUE@ROSE_INTEL_COMPILER_MATH_LIBS = -lm
# ROSE_INCLUDES = 
#     $(ROSE_BOOST_PREINCLUDE_PATH) 
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH = \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astMerge \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFileIO \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/virtualCFG \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astTokenStream \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astHiddenTypeAndDeclarationLists \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/frontend/SageIII/astFileIO \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFromString \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/includeDirectivesProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/sage_support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/ECJ_ROSE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I"$(JAVA_HOME)/include" \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/PHPFrontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_CLANG_FRONTEND_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/PythonFrontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/BinaryDisassembly \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/BinaryFormats \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/BinaryLoader \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/Disassemblers \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_CLANG_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/formatSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/JavaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/PHPCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/PythonCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/X10CodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/asmUnparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/graphs  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/stringSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/commandlineProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/abstractHandle \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/abstractMemoryObject \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/abstractLayer \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astDiagnostics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/astInlining \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/astOutlining  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/transformationTracking \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astMatching \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astQuery \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astRewriteMechanism \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/annotation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/symbolicVal \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/binaryAnalyses \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/binaryAnalyses/dataflowanalyses \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/binaryAnalyses/instructionSemantics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/computation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depInfo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/driver \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/outsideInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/prepostTransformation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/ompLowering \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/extractFunctionArgumentsNormalization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/singleStatementToBlockNormalization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/CFG \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/staticSingleAssignment \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/ssaUnfilteredCfg \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/systemDependenceGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/systemDependenceGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/CallGraphAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/OAWrap \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/bitvectorDataflow \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/VirtualFunctionAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/defUseAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/distributedMemoryAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/dominanceAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/graphAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/pointerAnal \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/staticInterproceduralSlicing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/valuePropagation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/variableRenaming \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_SIDEEFFECTS_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_GUI_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_QT_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_SQLITE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@			$(ROSE_SIDEEFFECT_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(SQLITE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/partialRedundancyElimination \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/finiteDifferencing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/functionCallNormalization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/constantFolding \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/implicitCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/libharu-2.1.0/include \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/3rdPartyLibraries/libharu-2.1.0/include \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/graphs \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/libltdl \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/roseExtensions/failSafe \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PHP_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PYTHON_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_YICES_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_YAML_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_READLINE_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_LIBMAGIC_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_DLIB_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_DWARF_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_WINE_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(VALGRIND_CFLAGS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(SQLITE3_CFLAGS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_BOOST_NORMAL_INCLUDE_PATH) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PCH_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(INTEL_PIN_INCLUDE_PATHS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ETHER_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ATERM_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(BOOST_CPPFLAGS)


# DQ (4/13/2016): Is there were we put the support to include -lstdc++.so on the link line directly?

# DQ (3/6/2013): We need to build a SWIG path that can't include the isystem option.
# Note use of "-isystem" option in ROSE_BOOST_PREINCLUDE_PATH to have the 
# boost specified on the configure
# command-line be used instead of the OS version of boost that is sometimes
# installed with Linux (it is always a version too old to be used with ROSE).
# This is used only when the ROSE configuration detects a previously installed
# version of Boost (e.g /usr/include/boost) that we don't want to use.
# ROSE_INCLUDES = 
#    $(ROSE_BOOST_PREINCLUDE_PATH) 
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH = \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_builddir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_builddir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/includeDirectivesProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/sage_support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/ECJ_ROSE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I"$(JAVA_HOME)/include" \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/BinaryDisassembly \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/BinaryFormats \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/BinaryLoader \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/Disassemblers \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/formatSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/JavaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/PHPCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/PythonCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/X10CodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/asmUnparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/graphs  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/stringSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/commandlineProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astDiagnostics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astMatching \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astQuery \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/binaryAnalyses \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/programAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/graphs \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/roseExtensions/failSafe \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     $(ROSE_ATERM_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     $(ROSE_BOOST_NORMAL_INCLUDE_PATH)


# DQ (10/23/2015): These paths have been replaces with the following variables.
# These variable are empty for now (reflecting the default usage, and need to 
# be set properly where ever Clang support is processed as a configure option.
#    -I$(top_srcdir)/src/frontend/CxxFrontend/ClangFrontend 
#    -I$(top_srcdir)/src/frontend/CxxFrontend/Clang 
#    $(ROSE_CLANG_FRONTEND_INCLUDE) 
#    $(ROSE_CLANG_INCLUDE) 
SWIG_ROSE_INCLUDES = $(ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH)
ROSE_INCLUDES = $(ROSE_BOOST_PREINCLUDE_PATH) $(ROSE_INCLUDES_WITHOUT_BOOST_ISYSTEM_PATH) 

# DQ (8/15/2010): I have removed these directories from the include paths since it no longer exists.
# I expect that the directories were removed and the include list not properly cleaned up.
# -I$(top_srcdir)/src/midend/binaryAnalyses/graph 
# -I$(top_srcdir)/src/midend/programTransformation/runtimeTransformation
# -I$(top_srcdir)/projects/dataBase

# DQ (12/22/2008): Move Boost directory to front and used "-isystem" option so
# that a system with a previous (older) installation of boost does not interfer 
# with the use of ROSE (and the version of boost specified using "--with-boost").
# $(BOOST_CPPFLAGS)

# DQ (10/28/2008): I think these should be included, I don't know why they 
# were removed (used with Microsoft Windows tests, and Yices tests).
# DQ: Not used currently 
#     $(ROSE_WINE_INCLUDES)

# DQ (5/3/2007): Removed from ROSE
#     -I$(top_srcdir)/src/midend/programAnalysis/dominatorTreesAndDominanceFrontiers
#     -I$(top_srcdir)/src/midend/programAnalysis/staticProgramSlicing

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly with make distcheck rule
#     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser

# New way using two libraries
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.a $(top_builddir)/src/libedg.a
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.so $(top_builddir)/src/libedg.so
# ROSE_LIBS_WITH_PATH = $(libdir)/librose.so $(libdir)/libedg.so
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la $(JAVA_JVM_LIB)
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_LIBS_WITH_PATH = $(ROSE_LIBS)

# ROSE_LIBS = $(top_builddir)/src/librose.la -lm $(LEXLIB) $(SQLITE_DATABASE_LIBS) $(LIB_QT) $(WAVE_LDFLAGS) $(WAVE_LIBRARIES) $(WAVE_LIBS) $(JAVA_JVM_LIB) $(RT_LIBS)

# MS 10/19/2015: added ROSE_BOOST_LIBS variable to share exact same
# boost libs list in ROSE an in the ROSTTA Makefiles.
ROSE_BOOST_LIBS = $(BOOST_LDFLAGS) $(BOOST_DATE_TIME_LIB) \
  $(BOOST_THREAD_LIB) $(BOOST_FILESYSTEM_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) \
  $(BOOST_REGEX_LIB)  $(BOOST_SYSTEM_LIB) $(BOOST_SERIALIZATION_LIB)  \
  $(BOOST_WAVE_LIB) $(BOOST_IOSTREAMS_LIB)

ROSE_LIBS = $(abspath $(top_builddir)/src/librose.la) -lm  $(JAVA_JVM_LINK) \
  $(SQLITE_DATABASE_LIBS) $(QT_LIBS) $(ROSE_BOOST_LIBS) \
  $(SQLITE3_LDFLAGS)  $(RT_LIBS) \
  $(ROSE_YICES_LIBS_WITH_PATH) $(ROSE_PHP_LIBS_WITH_PATH) $(ROSE_DWARF_LIBS_WITH_PATH) \
  $(ROSE_GUI_LIBS_WITH_PATH) $(ROSE_QT_LIBS_WITH_PATH) $(ROSE_SSL_LIBS) $(ROSE_ETHER_LIBS) \
  $(ROSE_INTEL_COMPILER_MATH_LIBS) $(ROSE_ATERM_LIBS) $(ROSE_EXPERIMENTAL_OFP_LIBS) \
  $(ROSE_YAML_LIBS_WITH_PATH) $(ROSE_LIBMAGIC_LIBS_WITH_PATH) $(ROSE_READLINE_LIBS_WITH_PATH) \
  $(ROSE_DLIB_LIBS_WITH_PATH)


# DQ (3/13/2009): Removed this from ROSE_LIBS because libtool warnings say it should be in AM_LDFLAGS
# (this is because it has been moved from being linked statically to being linked dynamically).
# $(ROSE_DWARF_LIBS_WITH_PATH)
# AM_LDFLAGS = $(ROSE_DWARF_LIBS_WITH_PATH)

# DQ (3/8/2009): This fails when I try to include it (fails in rose/src/testSharedRoseLib).
#  $(INTEL_PIN_LIB_PATHS) $(INTEL_PIN_LIBS)

# DQ (3/14/2009): It is cleaner to just required that Intel Pin support require setting
# the LD_LIBRARYPATH to include: $(INTEL_PIN_PATH)/intel64/lib-ext
# DQ (3/14/2009): Need to add rpath to LDFLAGS instead of LDADD (to follow libtool rules).
# LDFLAGS += $(ROSE_DWARF_LIBS_WITH_PATH)

# This ROSE_SEPARATE_LIBS is used for the linking of preprocessor.C used within
# development. The use of the seperate libraries make the linking faster where the
# main librose library is not built.  Libtool may have changed this so that we could
# just link to librose now just as easily, but one has to rebuild librose each time
# instead of just the individual shared library.
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_SEPARATE_LIBS = $(ROSE_LIBS)
#   $(LIB_QT) $(JAVA_JVM_LIB) 

# QY (11/2/04): removed -lastoutlining from ROSE_SEPARATE_LIBS 

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly 
# with make distcheck rule 
# -lannotationLanguageParser(appears after -lvaluePropagation)

# Test harness variables. See "rth_run.pl --help" for more info.  The RTH_RUN_FLAGS is meant to be set on the
# "make" command-line, but the default depends on the value of the verbosity $(V) flag.
RTH_RUN_FLAGS_V_ = 
RTH_RUN_FLAGS_V_0 = 
RTH_RUN_FLAGS_V_1 = --immediate-output
RTH_RUN_FLAGS = $(RTH_RUN_FLAGS_V_$(V))
RTH_RUN = $(top_srcdir)/scripts/rth_run.pl $(RTH_RUN_FLAGS) \
	srcdir=$(abspath $(srcdir)) top_srcdir=$(abspath $(top_srcdir)) \
	blddir=$$(pwd) top_blddir=$(abspath $(top_builddir)) \
	VALGRIND=$(VALGRIND)

RTH_STATS = $(top_srcdir)/scripts/rth_stats.pl
ROSE__CXX_TESTS_DIR = $(top_srcdir)/tests/nonsmoke/functional/CompileTests/Cxx_tests

# DQ (5/26/2014): Separate out test2014_241.C from use in the normalization tests.
# ROSE__CXX_TESTS = 
ROSE__CXX_TESTS_WITHOUT_2013_241 = test_CplusplusMacro_Cpp.C \
	test2001_01.C test2001_02.C test2001_03.C test2001_04.C \
	test2001_05.C test2001_06.C test2001_07.C test2001_08.C \
	test2001_09.C test2001_10.C test2001_11.C test2001_12.C \
	test2001_13.C test2001_14.C test2001_15.C test2001_16.C \
	test2001_17.C test2001_18.C test2001_19.C test2001_20.C \
	test2001_21.C test2001_22.C test2001_23.C test2001_24.C \
	test2001_25.C test2001_26.C test2001_27.C test2001_28.C \
	test2001_29.C test2002_01.C test2003_01.C test2003_02.C \
	test2003_03.C test2003_04.C test2003_05.C test2003_06.C \
	test2003_08.C test2003_09.C test2003_10.C test2003_11.C \
	test2003_12.C test2003_13.C test2003_14.C test2003_15.C \
	test2003_16.C test2003_17.C test2003_18.C test2003_19.C \
	test2003_20.C test2003_21.C test2003_23.C test2003_25.C \
	test2003_26.C test2003_27.C test2003_28.C test2003_29.C \
	test2003_30.C test2003_31.C test2003_32.C test2003_35.C \
	test2003_36.C test2003_37.C test2003_38.C test2004_01.C \
	test2004_02.C test2004_03.C test2004_04.C test2004_05.C \
	test2004_06.C test2004_07.C test2004_08.C test2004_09.C \
	test2004_10.C test2004_11.C test2004_12.C test2004_13.C \
	test2004_14.C test2004_15.C test2004_16.C test2004_17.C \
	test2004_18.C test2004_19.C test2004_23.C test2004_24.C \
	test2004_26.C test2004_27.C test2004_28.C test2004_29.C \
	test2004_30.C test2004_31.C test2004_32.C test2004_33.C \
	test2004_34.C test2004_36.C test2004_37.C test2004_38.C \
	test2004_39.C test2004_40.C test2004_42.C test2004_43.C \
	test2004_44.C test2004_45.C test2004_47.C test2004_48.C \
	test2004_49.C test2004_50.C test2004_51.C test2004_52.C \
	test2004_53.C test2004_54.C test2004_55.C test2004_56.C \
	test2004_58.C test2004_59.C test2004_60.C test2004_61.C \
	test2004_62.C test2004_63.C test2004_64.C test2004_65.C \
	test2004_67.C test2004_68.C test2004_69.C test2004_70.C \
	test2004_71.C test2004_72.C test2004_73.C test2004_74.C \
	test2004_75.C test2004_76.C test2004_78.C test2004_79.C \
	test2004_80.C test2004_81.C test2004_83.C test2004_84.C \
	test2004_86.C test2004_87.C test2004_88.C test2004_89.C \
	test2004_90.C test2004_91.C test2004_93.C test2004_94.C \
	test2004_95.C test2004_96.C test2004_97.C test2004_98.C \
	test2004_99.C test2004_100.C test2004_101.C test2004_102.C \
	test2004_103.C test2004_104.C test2004_105.C test2004_106.C \
	test2004_107.C test2004_108.C test2004_109.C test2004_110.C \
	test2004_111.C test2004_112.C test2004_113.C test2004_114.C \
	test2004_115.C test2004_116.C test2004_117.C test2004_118.C \
	test2004_119.C test2004_120.C test2004_121.C test2004_122.C \
	test2004_123.C test2004_124.C test2004_125.C test2004_127.C \
	test2004_128.C test2004_129.C test2004_130.C test2004_131.C \
	test2004_132.C test2004_133.C test2004_134.C test2004_135.C \
	test2004_136.C test2004_137.C test2004_138.C test2004_139.C \
	test2004_140.C test2004_141.C test2004_142.C test2004_143.C \
	test2004_144.C test2004_145.C test2004_146.C test2004_147.C \
	test2004_148.C test2004_149.C test2004_150.C test2004_151.C \
	test2004_152.C test2004_153.C test2004_154.C test2004_155.C \
	test2004_156.C test2004_157.C test2004_158.C test2004_159.C \
	test2004_160.C test2004_161.C test2004_162.C test2004_163.C \
	test2004_164.C test2005_01.C test2005_02.C test2005_03.C \
	test2005_04.C test2005_05.C test2005_07.C test2005_09.C \
	test2005_10.C test2005_11.C test2005_12.C test2005_13.C \
	test2005_14.C test2005_15.C test2005_16.C test2005_17.C \
	test2005_19.C test2005_20.C test2005_21.C test2005_22.C \
	test2005_23.C test2005_24.C test2005_25.C test2005_26.C \
	test2005_27.C test2005_28.C test2005_29.C test2005_30.C \
	test2005_31.C test2005_32.C test2005_33.C test2005_34.C \
	test2005_35.C test2005_36.C test2005_37.C test2005_38.C \
	test2005_39.C test2005_40.C test2005_41.C test2005_43.C \
	test2005_44.C test2005_45.C test2005_46.C test2005_47.C \
	test2005_48.C test2005_49.C test2005_51.C test2005_52.C \
	test2005_53.C test2005_55.C test2005_57.C test2005_58.C \
	test2005_59.C test2005_61.C test2005_62.C test2005_63.C \
	test2005_64.C test2005_65.C test2005_66.C test2005_67.C \
	test2005_68.C test2005_70.C test2005_71.C test2005_72.C \
	test2005_73.C test2005_74.C test2005_75a.C test2005_75b.C \
	test2005_76.C test2005_77.C test2005_78.C test2005_79.C \
	test2005_80.C test2005_81.C test2005_82.C test2005_83.C \
	test2005_84.C test2005_86.C test2005_87.C test2005_88.C \
	test2005_89.C test2005_90.C test2005_91.C test2005_92.C \
	test2005_93.C test2005_94.C test2005_95.C test2005_96.C \
	test2005_97.C test2005_98.C test2005_99.C test2005_100.C \
	test2005_101.C test2005_102.C test2005_103.C test2005_104.C \
	test2005_105.C test2005_106.C test2005_107.C test2005_108.C \
	test2005_109.C test2005_110.C test2005_111.C test2005_112.C \
	test2005_113.C test2005_114.C test2005_116.C test2005_117.C \
	test2005_118.C test2005_119.C test2005_120.C test2005_121.C \
	test2005_122.C test2005_123.C test2005_124.C test2005_125.C \
	test2005_126.C test2005_127.C test2005_128.C test2005_129.C \
	test2005_130.C test2005_131.C test2005_132.C test2005_133.C \
	test2005_134.C test2005_135.C test2005_136.C test2005_137.C \
	test2005_138.C test2005_139.C test2005_140.C test2005_141.C \
	test2005_142.C test2005_143.C test2005_144.C test2005_145.C \
	test2005_146.C test2005_147.C test2005_148.C test2005_149.C \
	test2005_150.C test2005_152.C test2005_153.C test2005_154.C \
	test2005_155.C test2005_156.C test2005_157.C test2005_158.C \
	test2005_159.C test2005_160.C test2005_161.C test2005_162.C \
	test2005_163.C test2005_164.C test2005_165.C test2005_166.C \
	test2005_167.C test2005_168.C test2005_169.C test2005_170.C \
	test2005_171.C test2005_172.C test2005_173.C test2005_174.C \
	test2005_175.C test2005_176.C test2005_177.C test2005_178.C \
	test2005_179.C test2005_180.C test2005_181.C test2005_182.C \
	test2005_183.C test2005_184.C test2005_185.C test2005_187.C \
	test2005_189.C test2005_190.C test2005_191.C test2005_192.C \
	test2005_193.C test2005_194.C test2005_195.C test2005_196.C \
	test2005_197.C test2005_198.C test2005_199.C test2005_202.C \
	test2005_203.C test2005_206.C test2005_207.C test2005_208.C \
	test2005_209.C test2006_01.C test2006_02.C test2006_03.C \
	test2006_04.C test2006_05.C test2006_06.C test2006_07.C \
	test2006_08.C test2006_10.C test2006_12.C test2006_13.C \
	test2006_14.C test2006_16.C test2006_17.C test2006_18.C \
	test2006_19.C test2006_22.C test2006_23.C test2006_25.C \
	test2006_26.C test2006_28.C test2006_34.C test2006_37.C \
	test2006_38.C test2006_39.C test2006_40.C test2006_41.C \
	test2006_42.C test2006_44.C test2006_46.C test2006_47.C \
	test2006_50.C test2006_52.C test2006_53.C test2006_54.C \
	test2006_55.C test2006_56.C test2006_57.C test2006_58.C \
	test2006_59.C test2005_60.C test2006_61.C test2006_62.C \
	test2006_63.C test2006_66.C test2006_67.C test2006_68.C \
	test2006_69.C test2006_70.C test2006_71.C test2006_72.C \
	test2006_73.C test2006_74.C test2006_75.C test2006_76.C \
	test2006_77.C test2006_78.C test2006_79.C test2006_80.C \
	test2006_81.C test2006_82.C test2006_83.C test2006_84.C \
	test2006_85.C test2006_86.C test2006_87.C test2006_88.C \
	test2006_89.C test2006_90.C test2006_91.C test2006_92.C \
	test2006_93.C test2006_94.C test2006_95.C test2006_96.C \
	test2006_97.C test2006_98.C test2006_99.C test2006_101.C \
	test2006_102.C test2006_103.C test2006_104.C test2006_105.C \
	test2006_106.C test2006_107.C test2006_108.C test2006_109.C \
	test2006_111.C test2006_113.C test2006_114.C test2006_115.C \
	test2006_116.C test2006_117.C test2006_118.C test2006_119.C \
	test2006_120.C test2006_121.C test2006_122.C test2006_123.C \
	test2006_124.C test2006_125.C test2006_126.C test2006_129.C \
	test2006_139.C test2006_140.C test2006_141.C test2006_142.C \
	test2006_143.C test2006_144.C test2006_145.C test2006_146.C \
	test2006_147.C test2006_148.C test2006_149.C test2006_150.C \
	test2006_151.C test2006_152.C test2006_153.C test2006_154.C \
	test2006_155.C test2006_156.C test2006_157.C test2006_158.C \
	test2006_159.C test2006_160.C test2006_161.C test2006_162.C \
	test2006_163.C test2006_164.C test2006_165.C test2006_166.C \
	test2006_177.C test2006_178.C test2006_179.C test2006_181.C \
	test2006_183.C test2006_185.C test2006_189.C test2007_01.C \
	test2007_02.C test2007_03.C test2007_04.C test2007_05.C \
	test2007_06.C test2007_07.C test2007_08.C test2007_09.C \
	test2007_10.C test2007_11.C test2007_12.C test2007_13.C \
	test2007_14.C test2007_15.C test2007_16.C test2007_17.C \
	test2007_21.C test2007_23.C test2007_24.C test2007_25.C \
	test2007_26.C test2007_28.C test2007_29.C test2007_38.C \
	test2007_40.C test2007_41.C test2007_43.C test2007_44.C \
	test2007_46.C test2007_47.C test2007_48.C test2007_49.C \
	test2007_50.C test2007_51.C test2007_52.C test2007_53.C \
	test2007_55.C test2007_57.C test2007_59.C test2007_70.C \
	test2007_72.C test2007_75.C test2007_77.C test2007_78.C \
	test2007_81.C test2007_82.C test2007_83.C test2007_84.C \
	test2007_85.C test2007_90.C test2007_94.C test2007_98.C \
	test2007_102.C test2007_103.C test2007_128.C test2007_130.C \
	test2007_133.C test2007_135.C test2007_137.C test2007_140.C \
	test2007_142.C test2007_147.C test2007_150.C test2007_151.C \
	test2007_152.C test2007_154.C test2007_155.C test2007_157.C \
	test2007_158.C test2007_159.C test2007_160.C test2007_161.C \
	test2007_162.C test2007_163.C test2007_164.C test2007_165.C \
	test2007_166.C test2007_167.C test2007_169.C test2007_170.C \
	test2007_171.C test2007_172.C test2007_173.C test2008_01.C \
	test2008_03.C test2008_04.C test2008_05.C test2008_06.C \
	test2008_08.C test2008_09.C test2008_10.C test2008_11.C \
	test2008_12.C test2008_13.C test2008_14.C test2008_16.C \
	test2009_01.C test2009_02.C test2009_03.C test2009_04.C \
	test2009_05.C test2009_06.C test2009_08.C test2009_09.C \
	test2009_10.C test2009_11.C test2009_12.C test2009_14.C \
	test2009_15.C test2009_18.C test2009_19.C test2009_20.C \
	test2009_21.C test2009_24.C test2009_27.C test2009_28.C \
	test2009_30.C test2009_31.C test2009_37.C test2009_39.C \
	test2009_40.C test2009_41.C test2009_42.C test2010_03.C \
	test2010_04.C test2010_05.C test2010_06.C test2010_18.C \
	test2010_19.C test2010_24.C test2011_01.C test2011_02.C \
	test2011_05.C test2011_07.C test2011_19.C test2011_20.C \
	test2011_21.C test2011_22.C test2011_23.C test2011_24.C \
	test2011_25.C test2011_26.C test2011_27.C test2011_28.C \
	test2011_29.C test2011_30.C test2011_31.C test2011_32.C \
	test2011_33.C test2011_34.C test2011_35.C test2011_36.C \
	test2011_37.C test2011_38.C test2011_39.C test2011_40.C \
	test2011_41.C test2011_42.C test2011_43.C test2011_44.C \
	test2011_45.C test2011_46.C test2011_47.C test2011_48.C \
	test2011_49.C test2011_50.C test2011_51.C test2011_52.C \
	test2011_53.C test2011_54.C test2011_55.C test2011_56.C \
	test2011_57.C test2011_58.C test2011_59.C test2011_60.C \
	test2011_61.C test2011_62.C test2011_63.C test2011_64.C \
	test2011_65.C test2011_66.C test2011_67.C test2011_68.C \
	test2011_69.C test2011_70.C test2011_71.C test2011_72.C \
	test2011_73.C test2011_74.C test2011_75.C test2011_76.C \
	test2011_77.C test2011_78.C test2011_79.C test2011_80.C \
	test2011_81.C test2011_82.C test2011_83.C test2011_84.C \
	test2011_85.C test2011_86.C test2011_87.C test2011_88.C \
	test2011_89.C test2011_90.C test2011_91.C test2011_92.C \
	test2011_93.C test2011_94.C test2011_95.C test2011_96.C \
	test2011_97.C test2011_98.C test2011_99.C test2011_100.C \
	test2011_101.C test2011_110.C test2011_111.C test2011_115.C \
	test2011_117.C test2011_118.C test2011_119.C test2011_120.C \
	test2011_121.C test2011_133.C test2011_135.C test2011_136.C \
	test2011_137.C test2011_138.C test2011_139.C test2011_140.C \
	test2011_143.C test2011_146.C test2011_147.C test2011_149.C \
	test2011_150.C test2011_151.C test2011_152.C test2011_153.C \
	test2011_154.C test2011_155.C test2011_156.C test2011_157.C \
	test2011_158.C test2011_159.C test2011_160.C test2011_161.C \
	test2011_162.C test2011_163.C test2011_164.C test2011_165.C \
	test2011_166.C test2011_167.C test2011_168.C test2011_169.C \
	test2011_170.C test2011_171.C test2011_172.C test2011_173.C \
	test2011_174.C test2011_175.C test2011_176.C test2011_177.C \
	test2011_179.C test2011_180.C test2011_181.C test2011_182.C \
	test2011_183.C test2011_184.C test2011_185.C test2011_186.C \
	test2011_187.C test2011_188.C test2011_189.C test2011_190.C \
	test2011_191.C test2011_192.C test2011_193.C test2011_194.C \
	test2011_195.C test2012_01.C test2012_02.C test2012_03.C \
	test2012_04.C test2012_05.C test2012_06.C test2012_07.C \
	test2012_08.C test2012_10.C test2012_11.C test2012_12.C \
	test2012_13.C test2012_14.C test2012_15.C test2012_16.C \
	test2012_17.C test2012_18.C test2012_19.C test2012_20.C \
	test2012_21.C test2012_22.C test2012_23.C test2012_24.C \
	test2012_25.C test2012_26.C test2012_27.C test2012_28.C \
	test2012_29.C test2012_30.C test2012_31.C test2012_32.C \
	test2012_33.C test2012_34.C test2012_36.C test2012_37.C \
	test2012_38.C test2012_39.C test2012_40.C test2012_41.C \
	test2012_42.C test2012_43.C test2012_44.C test2012_45.C \
	test2012_46.C test2012_47.C test2012_48.C test2012_49.C \
	test2012_50.C test2012_51.C test2012_52.C test2012_53.C \
	test2012_54.C test2012_55.C test2012_56.C test2012_58.C \
	test2012_60.C test2012_61.C test2012_62.C test2012_63.C \
	test2012_64.C test2012_65.C test2012_66.C test2012_67.C \
	test2012_69.C test2012_70.C test2012_71.C test2012_72.C \
	test2012_73.C test2012_74.C test2012_75.C test2012_76.C \
	test2012_77.C test2012_78.C test2012_80.C test2012_81.C \
	test2012_82.C test2012_83.C test2012_84.C test2012_85.C \
	test2012_87.C test2012_88.C test2012_89.C test2012_91.C \
	test2012_92.C test2012_93.C test2012_94.C test2012_95.C \
	test2012_96.C test2012_97.C test2012_98.C test2012_99.C \
	test2012_100.C test2012_101.C test2012_102.C test2012_103.C \
	test2012_104.C test2012_105.C test2012_106.C test2012_107.C \
	test2012_108.C test2012_109.C test2012_110.C test2012_111.C \
	test2012_112.C test2012_113.C test2012_114.C test2012_115.C \
	test2012_116.C test2012_117.C test2012_118.C test2012_119.C \
	test2012_120.C test2012_121.C test2012_122.C test2012_123.C \
	test2012_124.C test2012_125.C test2012_126.C test2012_127.C \
	test2012_128.C test2012_129.C test2012_130.C test2012_131.C \
	test2012_132.C test2012_136.C test2012_137.C test2012_138.C \
	test2012_141.C test2012_142.C test2012_143.C test2012_144.C \
	test2012_145.C test2012_146.C test2012_147.C test2012_148.C \
	test2012_149.C test2012_150.C test2012_151.C test2012_152.C \
	test2012_153.C test2012_154.C test2012_155.C test2012_156.C \
	test2012_157.C test2012_158.C test2012_159.C test2012_160.C \
	test2012_161.C test2012_162.C test2012_163.C test2012_164.C \
	test2012_165.C test2012_166.C test2012_167.C test2012_168.C \
	test2012_169.C test2012_170.C test2012_171.C test2012_172.C \
	test2012_173.C test2012_174.C test2012_175.C test2012_176.C \
	test2012_177.C test2012_178.C test2012_179.C test2012_180.C \
	test2012_181.C test2012_182.C test2012_183.C test2012_184.C \
	test2012_185.C test2012_186.C test2012_187.C test2012_190.C \
	test2012_191.C test2012_192.C test2012_193.C test2012_194.C \
	test2012_195.C test2012_196.C test2012_197.C test2012_198.C \
	test2012_199.C test2012_200.C test2012_201.C test2012_202.C \
	test2012_203.C test2012_204.C test2012_205.C test2012_206.C \
	test2012_207.C test2012_208.C test2012_209.C test2012_210.C \
	test2012_211.C test2012_212.C test2012_213.C test2012_214.C \
	test2012_215.C test2012_216.C test2012_217.C test2012_218.C \
	test2012_219.C test2012_220.C test2012_221.C test2012_222.C \
	test2012_223.C test2012_224.C test2012_225.C test2012_226.C \
	test2012_227.C test2012_228.C test2012_229.C test2012_230.C \
	test2012_231.C test2012_232.C test2012_233.C test2012_234.C \
	test2012_235.C test2012_236.C test2012_237.C test2012_238.C \
	test2012_239.C test2012_240.C test2012_241.C test2012_242.C \
	test2012_243.C test2012_244.C test2012_245.C test2012_246a.C \
	test2012_246b.C test2012_247.C test2012_248.C test2012_249.C \
	test2012_250.C test2012_251.C test2012_253.C test2012_254.C \
	test2012_255.C test2012_256.C test2012_257.C test2012_258.C \
	test2012_259.C test2012_260.C test2012_262.C test2012_263.C \
	test2012_264.C test2012_265.C test2012_266.C test2012_267.C \
	test2012_268.C test2012_269.C test2012_270.C test2012_271.C \
	test2013_01.C test2013_02.C test2013_03.C test2013_04.C \
	test2013_05.C test2013_06.C test2013_07.C test2013_08.C \
	test2013_09.C test2013_10.C test2013_11.C test2013_12.C \
	test2013_16.C test2013_17.C test2013_18.C test2013_20.C \
	test2013_21.C test2013_22.C test2013_23.C test2013_25.C \
	test2013_26.C test2013_27.C test2013_28.C test2013_29.C \
	test2013_31.C test2013_32.C test2013_33.C test2013_34.C \
	test2013_36.C test2013_37.C test2013_38.C test2013_39.C \
	test2013_40.C test2013_44.C test2013_46.C test2013_47.C \
	test2013_48.C test2013_50.C test2013_51.C test2013_52.C \
	test2013_53.C test2013_54.C test2013_55.C test2013_56.C \
	test2013_57.C test2013_58.C test2013_59.C test2013_60.C \
	test2013_61.C test2013_64.C test2013_65.C test2013_66.C \
	test2013_67.C test2013_68.C test2013_69.C test2013_70.C \
	test2013_71.C test2013_72.C test2013_73.C test2013_74.C \
	test2013_75.C test2013_76.C test2013_77.C test2013_78.C \
	test2013_79.C test2013_80.C test2013_81.C test2013_82.C \
	test2013_83.C test2013_84.C test2013_85.C test2013_86.C \
	test2013_87.C test2013_88.C test2013_89.C test2013_90.C \
	test2013_91.C test2013_92.C test2013_93.C test2013_94.C \
	test2013_95.C test2013_96.C test2013_97.C test2013_98.C \
	test2013_99.C test2013_100.C test2013_101.C test2013_102.C \
	test2013_103.C test2013_104.C test2013_105.C test2013_106.C \
	test2013_107.C test2013_108.C test2013_109.C test2013_110.C \
	test2013_111.C test2013_112.C test2013_113.C test2013_114.C \
	test2013_115.C test2013_116.C test2013_118.C test2013_119.C \
	test2013_120.C test2013_121.C test2013_122.C test2013_123.C \
	test2013_124.C test2013_125.C test2013_126.C test2013_127.C \
	test2013_128.C test2013_129.C test2013_130.C test2013_131.C \
	test2013_132.C test2013_133.C test2013_134.C test2013_135.C \
	test2013_136.C test2013_137.C test2013_138.C test2013_139.C \
	test2013_140.C test2013_141.C test2013_142.C test2013_143.C \
	test2013_144.C test2013_145.C test2013_146.C test2013_147.C \
	test2013_148.C test2013_149.C test2013_150.C test2013_151.C \
	test2013_152.C test2013_153.C test2013_154.C test2013_155.C \
	test2013_156.C test2013_157.C test2013_158.C test2013_159.C \
	test2013_160.C test2013_161.C test2013_162.C test2013_163.C \
	test2013_165.C test2013_166.C test2013_167.C test2013_168.C \
	test2013_169.C test2013_170.C test2013_171.C test2013_172.C \
	test2013_173.C test2013_174.C test2013_175.C test2013_176.C \
	test2013_177.C test2013_178.C test2013_179.C test2013_180.C \
	test2013_181.C test2013_182.C test2013_183.C test2013_184.C \
	test2013_186.C test2013_187.C test2013_188.C test2013_189.C \
	test2013_190.C test2013_191.C test2013_192.C test2013_193.C \
	test2013_194.C test2013_195.C test2013_196.C test2013_198.C \
	test2013_199.C test2013_200.C test2013_201.C test2013_202.C \
	test2013_203.C test2013_204.C test2013_205.C test2013_206.C \
	test2013_207.C test2013_208.C test2013_209.C test2013_210.C \
	test2013_211.C test2013_213.C test2013_214.C test2013_215.C \
	test2013_216.C test2013_217.C test2013_218.C test2013_219.C \
	test2013_220.C test2013_221.C test2013_222.C test2013_223.C \
	test2013_225.C test2013_226.C test2013_227.C test2013_228.C \
	test2013_229.C test2013_230.C test2013_231.C test2013_232.C \
	test2013_237.C test2013_238.C test2013_239.C test2013_244.C \
	test2013_250.C test2013_251.C test2013_252.C test2013_300.C \
	test2013_301.C test2013_302.C test2013_303.C test2013_305.C \
	test2013_306.C test2013_307.C test2013_308.C test2013_310.C \
	test2013_311.C test2013_312.C test2013_313.C test2013_314.C \
	test2013_315.C test2013_316.C test2013_317.C test2013_318.C \
	test2013_319.C test2013_320.C test_int_lexemes.C \
	test_int_lexemes_donot_pass.C test_simple_int.C test_wchars.C \
	lexPhase2003_01.C inputForLoopLocator.C inputBug317.C \
	inputBug327.C X.C dynamic_cast.C fstream.C test2005_06.C \
	test2005_08.C test2012_57.C test2012_59.C test2013_milind_01.C \
	$(am__append_1) $(am__append_2) $(am__append_3)
ROSE__CXX_TESTS__BOOST = test2013_236.C $(am__append_4)

# DQ (1/19/2017): This normalization of "const char*" literal strings to "char*" is a problem for GNU 6.1 (6.x and later) compilers.
# DQ (5/26/2014): Separate out test2014_241.C from use in the normalization tests.
@ROSE_USING_GCC_VERSION_LATER_6_1_FALSE@@USING_CLANG_COMPILER_FALSE@ROSE__CXX_TESTS = $(ROSE__CXX_TESTS_WITHOUT_2013_241) \
@ROSE_USING_GCC_VERSION_LATER_6_1_FALSE@@USING_CLANG_COMPILER_FALSE@	test2013_241.C \
@ROSE_USING_GCC_VERSION_LATER_6_1_FALSE@@USING_CLANG_COMPILER_FALSE@	$(am__append_5) \
@ROSE_USING_GCC_VERSION_LATER_6_1_FALSE@@USING_CLANG_COMPILER_FALSE@	$(am__append_6)
@ROSE_USING_GCC_VERSION_LATER_6_1_TRUE@@USING_CLANG_COMPILER_FALSE@ROSE__CXX_TESTS = $(am__append_5) \
@ROSE_USING_GCC_VERSION_LATER_6_1_TRUE@@USING_CLANG_COMPILER_FALSE@	$(am__append_6)
# DQ (1/16/2017): We need to include this to get the larger list of older test codes as well.
@USING_CLANG_COMPILER_TRUE@ROSE__CXX_TESTS = $(ROSE__CXX_TESTS_WITHOUT_2013_241) \
@USING_CLANG_COMPILER_TRUE@	$(am__append_5) $(am__append_6)

# This includes a standard list of tests for C++ code.

# DQ (10/23/2013): Disable so that we can try an approach modifiying the original ATerm library to be ROSE specific.
# DQ (10/20/2013): Allow alternative support using ROSE ATerm library API.
SUBDIRS = roseAtermAPI

# DQ (10/20/2013): Allow alternative support using ROSE ATerm library API.
# The Stratego and A-Term support is outside of ROSE
# This needs a configure flag so that the location outside 
# of ROSE can be easily specificed at configure time.
# A_TERM_INCLUDE = -I$(ATERM_INSTALL_PATH)/include
# A_TERM_INCLUDE = -I$(srcdir)/roseAtermAPI
# A_TERM_INCLUDE = -I$(srcdir)/aterm-2.5/aterm
# A_TERM_INCLUDE = -I$(ATERM_INSTALL_PATH)/include

# AM_CPPFLAGS = $(ROSE_INCLUDES) $(A_TERM_INCLUDE)
# AM_CPPFLAGS = $(A_TERM_INCLUDE) $(ROSE_INCLUDES)
AM_CPPFLAGS = $(ROSE_INCLUDES)

# termToStratego_SOURCES = termToStratego.C astToAtermImpl.C atermTranslation.h

# DQ (9/26/2015): Comment out to avoid warning in automake.
# strategoToTerm_SOURCES = strategoToTerm.C atermToAstImpl.C atermTranslation.h

# DQ (9/26/2015): Comment out to avoid warning in automake.
# termGraph_SOURCES = termGraph.C

# termGraph_using_RoseAtermAPI_SOURCES = termGraph_using_RoseAtermAPI.C
# termGraph_using_RoseAtermAPI_SOURCES = termGraph_using_RoseAtermAPI.C astToAtermImpl.C atermToAstImpl.C atermTranslation.h

# testTranslation_AST_to_ATerm_to_AST_SOURCES = testTranslation_AST_to_ATerm_to_AST.C astToAtermImpl.C atermToAstImpl.C atermTranslation.h
# testTranslation_AST_to_ATerm_SOURCES = testTranslation_AST_to_ATerm.C astToAtermImpl.C atermToAstImpl.C atermTranslation.h
# testTranslation_ATerm_to_AST_SOURCES = testTranslation_ATerm_to_AST.C astToAtermImpl.C atermToAstImpl.C atermTranslation.h
# testTranslation_AST_to_ATerm_to_AST_SOURCES = testTranslation_AST_to_ATerm_to_AST.C atermTranslation.h
testTranslation_AST_to_ATerm_SOURCES = testTranslation_AST_to_ATerm.C atermTranslation.h
testTranslation_ATerm_to_AST_SOURCES = testTranslation_ATerm_to_AST.C atermTranslation.h
termpretty_SOURCES = termpretty.l++

# termGraph_using_RoseAtermAPI_withForwardedFunctions_SOURCES = termGraph_using_RoseAtermAPI_withForwardedFunctions.C
include_HEADERS = atermTranslation.h
ATERM_LIB_DIR = $(ATERM_INSTALL_PATH)/lib
LDADD = $(LIBS_WITH_RPATH) $(ROSE_LIBS) $(ATERM_LIB_DIR)/libATerm.a 

# DQ (9/17/2014): This is not inlcuded in the ROSE_LIBS list of libraries.
# Permit linking to alternative ROSE ATerm API used to support new non-serialized API for Stratego.
# termGraph_using_RoseAtermAPI_withForwardedFunctions_LDADD = $(LIBS_WITH_RPATH) $(ROSE_LIBS) ./roseAtermAPI/libATerm.la
# termGraph_using_RoseAtermAPI_LDADD = $(LIBS_WITH_RPATH) $(ROSE_LIBS) $(srcdir)/aterm-2.5/aterm/libATerm.la
# termGraph_using_RoseAtermAPI_LDADD = $(LIBS_WITH_RPATH) $(ROSE_LIBS) 

# Added new test code to increase testing
# testTranslation_AST_to_ATerm_to_AST_LDADD = $(LIBS_WITH_RPATH) $(ROSE_LIBS) 
# testTranslation_AST_to_ATerm_LDADD = $(LIBS_WITH_RPATH) $(ROSE_LIBS) 
# testTranslation_ATerm_to_AST_LDADD = $(LIBS_WITH_RPATH) $(ROSE_LIBS) 

# DQ (10/1/2014): This is the complete list of passing example codes.
COMPLETE_TESTCODES_REQUIRED_TO_PASS = \
test2013_01.C \
test2013_02.C \
test2013_03.C \
test2013_04.C \
test2014_01.C

TESTCODES_REQUIRED_TO_PASS = \
test2014_05.C

TESTCODE_CURRENTLY_FAILING = 

# Automake's testing mechanism (which defines the "make check" rule) requires passing tests.
TESTCODES = $(TESTCODES_REQUIRED_TO_PASS)
ALL_TESTCODES = $(TESTCODES) $(TESTCODE_CURRENTLY_FAILING)

# PASSING_TEST_Output = $(addprefix rose_,${TESTCODES})
# TEST_Output = $(addprefix rose_,${ALL_TESTCODES})
# PASSING_TEST_Output = $(TESTCODES_REQUIRED_TO_PASS)
TEST_Output = $(ALL_TESTCODES)
PASSING_TEST_Output = $(addsuffix .passed, $(filter-out $(TESTCODE_CURRENTLY_FAILING), $(ALL_TESTCODES)))

# rose_%: $(srcdir)/% termToStratego
#	./termToStratego $(ROSE_FLAGS) -c $< -o $@
REGRESSION_TESTCODES = \
test2001_01.C \
test2001_02.C \
test2001_03.C \
test2001_04.C \
test2001_05.C \
test2001_06.C \
test2001_07.C \
test2001_08.C \
test2001_09.C \
test2001_10.C \
test2001_11.C \
test2001_12.C \
test2001_13.C \
test2001_14.C \
test2001_15.C \
test2001_16.C \
test2001_17.C \
test2001_18.C \
test2001_19.C \
test2001_20.C \
test2001_21.C \
test2001_22.C \
test2001_23.C \
test2001_24.C \
test2001_25.C \
test2001_26.C \
test2001_27.C \
test2001_28.C \
test2001_29.C \
test2002_01.C \
test2003_01.C \
test2003_02.C \
test2003_03.C \
test2003_04.C \
test2003_05.C \
test2003_06.C \
test2003_08.C \
test2003_09.C \
test2003_10.C \
test2003_11.C \
test2003_12.C \
test2003_13.C \
test2003_14.C \
test2003_15.C \
test2003_16.C \
test2003_17.C \
test2003_18.C \
test2003_19.C \
test2003_20.C \
test2003_21.C \
test2003_23.C \
test2003_25.C \
test2003_26.C \
test2003_27.C \
test2003_28.C \
test2003_29.C \
test2003_30.C \
test2003_31.C \
test2003_32.C \
test2003_35.C \
test2003_36.C \
test2003_37.C \
test2003_38.C \
test2004_01.C \
test2004_02.C \
test2004_03.C \
test2004_04.C \
test2004_05.C \
test2004_06.C \
test2004_07.C \
test2004_08.C \
test2004_09.C \
test2004_10.C \
test2004_11.C \
test2004_12.C \
test2004_13.C \
test2004_14.C \
test2004_15.C \
test2004_16.C \
test2004_17.C \
test2004_18.C \
test2004_19.C \
test2004_23.C \
test2004_24.C \
test2004_26.C \
test2004_27.C \
test2004_28.C \
test2004_29.C \
test2004_30.C \
test2004_31.C \
test2004_32.C \
test2004_33.C \
test2004_34.C \
test2004_35.C \
test2004_36.C \
test2004_37.C \
test2004_38.C \
test2004_39.C \
test2004_40.C \
test2004_42.C \
test2004_43.C \
test2004_44.C \
test2004_45.C \
test2004_47.C \
test2004_48.C \
test2004_49.C \
test2004_50.C \
test2004_51.C \
test2004_52.C \
test2004_53.C \
test2004_54.C \
test2004_55.C \
test2004_56.C \
test2004_58.C \
test2004_59.C \
test2004_60.C \
test2004_61.C \
test2004_62.C \
test2004_63.C \
test2004_64.C \
test2004_65.C \
test2004_67.C \
test2004_68.C \
test2004_69.C \
test2004_70.C \
test2004_71.C \
test2004_72.C \
test2004_73.C \
test2004_74.C \
test2004_75.C \
test2004_76.C \
test2004_77.C \
test2004_78.C \
test2004_79.C \
test2004_80.C \
test2004_81.C \
test2004_83.C \
test2004_84.C \
test2004_86.C \
test2004_87.C \
test2004_88.C \
test2004_89.C \
test2004_90.C \
test2004_91.C \
test2004_93.C \
test2004_94.C \
test2004_95.C \
test2004_96.C \
test2004_97.C \
test2004_98.C \
test2004_99.C \
test2004_100.C \
test2004_101.C \
test2004_102.C \
test2004_103.C \
test2004_106.C \
test2004_107.C \
test2004_108.C \
test2004_109.C \
test2004_110.C \
test2004_111.C \
test2004_112.C \
test2004_113.C \
test2004_114.C \
test2004_115.C \
 test2004_116.C \
test2004_117.C \
test2004_118.C \
test2004_119.C \
test2004_121.C \
test2004_122.C \
test2004_123.C \
test2004_124.C \
test2004_125.C \
test2004_128.C \
test2004_131.C \
test2004_132.C \
test2004_133.C \
test2004_134.C \
test2004_135.C \
test2004_136.C \
test2004_137.C \
test2004_138.C \
test2004_139.C \
test2004_140.C \
test2004_141.C \
test2004_142.C \
 test2004_143.C \
test2004_144.C \
test2004_145.C \
test2004_146.C \
test2004_147.C \
test2004_148.C \
 test2004_149.C \
test2004_150.C \
test2004_151.C \
test2004_152.C \
test2004_153.C \
test2004_154.C \
test2004_155.C \
test2004_156.C \
test2004_157.C \
test2004_158.C \
test2004_159.C \
test2004_160.C \
test2004_161.C \
test2004_162.C \
test2004_163.C \
test2004_164.C \
test2005_01.C \
test2005_02.C \
test2005_03.C \
test2005_04.C \
test2005_05.C \
test2005_06.C \
test2005_07.C \
test2005_08.C \
test2005_10.C \
test2005_11.C \
test2005_12.C \
test2005_13.C \
test2005_14.C \
test2005_15.C \
test2005_16.C \
test2005_17.C \
test2005_19.C \
test2005_20.C \
test2005_21.C \
test2005_22.C \
test2005_23.C \
test2005_24.C \
test2005_25.C \
test2005_26.C \
test2005_27.C \
 test2005_28.C \
test2005_29.C \
test2005_30.C \
test2005_31.C \
test2005_33.C \
test2005_36.C \
test2005_37.C \
test2005_38.C \
 test2005_39.C \
test2005_40.C \
test2005_41.C \
 test2005_42.C \
test2005_43.C \
test2005_44.C \
test2005_45.C \
test2005_46.C \
test2005_47.C \
test2005_48.C \
test2005_49.C \
test2005_50.C \
test2005_51.C \
test2005_52.C \
test2005_53.C \
test2005_55.C \
test2005_57.C \
test2005_58.C \
test2005_59.C \
test2005_60.C \
test2005_61.C \
test2005_62.C \
test2005_63.C \
test2005_64.C \
test2005_65.C \
test2005_66.C \
test2005_67.C \
test2005_68.C \
test2005_70.C \
test2005_71.C \
test2005_72.C \
test2005_73.C \
test2005_74.C \
test2005_75a.C \
test2005_75b.C \
test2005_76.C \
test2005_77.C \
test2005_78.C \
test2005_79.C \
test2005_80.C \
test2005_81.C \
 test2005_82.C \
test2005_83.C \
test2005_84.C \
test2005_86.C \
test2005_87.C \
test2005_88.C \
test2005_89.C \
test2005_90.C \
test2005_91.C \
test2005_92.C \
 test2005_93.C \
test2005_94.C \
test2005_95.C \
test2005_96.C \
test2005_97.C \
test2005_98.C \
test2005_99.C \
test2005_100.C \
test2005_101.C \
test2005_102.C \
test2005_105.C \
test2005_106.C \
test2005_107.C \
test2005_108.C \
test2005_109.C \
test2005_110.C \
test2005_111.C \
test2005_113.C \
test2005_114.C \
test2005_116.C \
test2005_118.C \
test2005_119.C \
test2005_120.C \
test2005_121.C \
test2005_122.C \
test2005_123.C \
test2005_124.C \
test2005_125.C \
test2005_126.C \
test2005_127.C \
test2005_129.C \
test2005_130.C \
test2005_131.C \
test2005_132.C \
test2005_133.C \
test2005_134.C \
test2005_135.C \
test2005_136.C \
test2005_137.C \
test2005_138.C \
test2005_139.C \
test2005_140.C \
test2005_141.C \
test2005_143.C \
test2005_144.C \
test2005_145.C \
test2005_146.C \
test2005_147.C \
test2005_148.C \
test2005_149.C \
test2005_150.C \
test2005_152.C \
test2005_153.C \
test2005_155.C \
test2005_156.C \
test2005_157.C \
test2005_158.C \
test2005_159.C \
test2005_160.C \
test2005_162.C \
test2005_164.C \
test2005_165.C \
test2005_166.C \
test2005_168.C \
test2005_167.C \
test2005_169.C \
test2005_170.C \
test2005_171.C \
test2005_172.C \
test2005_173.C \
test2005_174.C \
test2005_175.C \
test2005_176.C \
test2005_177.C \
test2005_178.C \
test2005_180.C \
test2005_181.C \
test2005_182.C \
test2005_184.C \
test2005_185.C \
test2005_187.C \
test2005_189.C \
test2005_190.C \
test2005_191.C \
test2005_192.C \
test2005_193.C \
test2005_195.C \
   test2005_196.C \
test2005_197.C \
test2005_198.C \
test2005_202.C \
test2005_203.C \
   test2005_206.C \
   test2005_207.C \
test2005_208.C \
test2005_209.C \
test2006_01.C \
test2006_02.C \
test2006_03.C \
test2006_04.C \
test2006_05.C \
test2006_06.C \
test2006_07.C \
test2006_08.C \
test2006_10.C \
test2006_12.C \
test2006_13.C \
test2006_14.C \
test2006_16.C \
test2006_17.C \
test2006_18.C \
test2006_19.C \
test2006_20.C \
test2006_22.C \
test2006_23.C \
test2006_25.C \
test2006_26.C \
test2006_28.C \
test2006_34.C \
test2006_37.C \
test2006_38.C \
test2006_39.C \
test2006_40.C \
test2006_41.C \
test2006_42.C \
test2006_44.C \
test2006_46.C \
test2006_47.C \
test2006_50.C \
test2006_52.C \
test2006_54.C \
test2006_55.C \
test2006_56.C \
test2006_57.C \
test2006_58.C \
test2006_59.C \
test2006_61.C \
test2006_62.C \
test2006_63.C \
test2006_66.C \
test2006_67.C \
test2006_68.C \
test2006_69.C \
test2006_70.C \
test2006_71.C \
test2006_72.C \
test2006_73.C \
test2006_74.C \
test2006_75.C \
test2006_76.C \
test2006_77.C \
test2006_78.C \
test2006_79.C \
test2006_80.C \
test2006_81.C \
test2006_82.C \
test2006_83.C \
test2006_85.C \
test2006_87.C \
test2006_88.C \
test2006_89.C \
test2006_90.C \
test2006_91.C \
test2006_92.C \
test2006_93.C \
test2006_94.C \
test2006_95.C \
test2006_96.C \
test2006_97.C \
test2006_98.C \
test2006_99.C \
test2006_101.C \
test2006_102.C \
test2006_103.C \
test2006_104.C \
test2006_105.C \
test2006_106.C \
test2006_107.C \
test2006_108.C \
test2006_109.C \
test2006_111.C \
test2006_113.C \
test2006_114.C \
test2006_115.C \
test2006_116.C \
test2006_117.C \
test2006_118.C \
test2006_119.C \
test2006_120.C \
test2006_122.C \
test2006_123.C \
test2006_126.C \
test2006_129.C \
test2006_140.C \
test2006_142.C \
test2006_143.C \
test2006_144.C \
test2006_145.C \
test2006_146.C \
test2006_148.C \
test2006_149.C \
test2006_150.C \
test2006_152.C \
test2006_153.C \
test2006_154.C \
   test2006_155.C \
   test2006_156.C \
   test2006_157.C \
   test2006_158.C \
test2006_160.C \
test2006_161.C \
test2006_162.C \
test2006_163.C \
test2006_164.C \
test2006_165.C \
test2006_166.C \
test2006_177.C \
test2006_178.C \
test2006_179.C \
test2006_181.C \
test2006_183.C \
test2006_185.C \
test2006_189.C \
test2007_02.C \
test2007_03.C \
test2007_04.C \
test2007_06.C \
test2007_07.C \
test2007_08.C \
test2007_09.C \
test2007_10.C \
test2007_11.C \
test2007_12.C \
test2007_14.C \
   test2007_15.C \
test2007_16.C \
test2007_21.C \
test2007_23.C \
test2007_24.C \
test2007_25.C \
test2007_26.C \
test2007_28.C \
test2007_29.C \
test2007_38.C \
test2007_40.C \
test2007_41.C \
test2007_43.C \
test2007_44.C \
test2007_46.C \
test2007_47.C \
test2007_48.C \
test2007_49.C \
test2007_50.C \
test2007_51.C \
test2007_52.C \
test2007_53.C \
test2007_57.C \
test2007_59.C \
test2007_62.C \
test2007_70.C \
test2007_72.C \
test2007_75.C \
test2007_77.C \
test2007_81.C \
test2007_82.C \
test2007_83.C \
test2007_84.C \
test2007_85.C \
test2007_90.C \
test2007_94.C \
test2007_98.C \
test2007_102.C \
test2007_103.C \
test2007_128.C \
test2007_130.C \
test2007_133.C \
test2007_135.C \
test2007_137.C \
test2007_140.C \
test2007_141.C \
   test2007_142.C \
test2007_147.C \
test2007_150.C \
test2007_151.C \
test2007_152.C \
test2007_154.C \
test2007_155.C \
test2007_157.C \
test2007_158.C \
test2007_159.C \
test2007_160.C \
test2007_161.C \
test2007_162.C \
test2007_163.C \
test2007_164.C \
test2007_165.C \
test2007_166.C \
test2007_167.C \
test2007_169.C \
test2007_170.C \
test2007_171.C \
test2007_172.C \
test2007_173.C \
test2008_01.C \
test2008_03.C \
test2008_05.C \
test2008_06.C \
test2008_08.C \
test2008_09.C \
test2008_10.C \
test2008_11.C \
test2008_12.C \
test2008_13.C \
test2008_14.C \
test2008_16.C \
test2009_01.C \
test2009_02.C \
test2009_03.C \
test2009_04.C \
test2009_05.C \
test2009_06.C \
test2009_08.C \
test2009_09.C \
test2009_10.C \
test2009_11.C \
test2009_12.C \
test2009_14.C \
test2009_15.C \
test2009_18.C \
test2009_19.C \
test2009_20.C \
test2009_21.C \
test2009_24.C \
test2009_27.C \
test2009_28.C \
test2009_30.C \
test2009_39.C \
test2009_40.C \
test2009_42.C \
test2010_03.C \
test2010_04.C \
test2010_05.C \
test2010_06.C \
test2010_18.C \
test2010_19.C \
test2011_01.C \
test2011_02.C \
test2011_05.C \
test2011_06.C \
test2011_07.C \
test2011_19.C \
test2011_20.C \
test2011_21.C \
test2011_22.C \
test2011_23.C \
test2011_24.C \
test2011_25.C \
test2011_26.C \
test2011_27.C \
test2011_28.C \
test2011_29.C \
test2011_30.C \
test2011_31.C \
test2011_32.C \
test2011_33.C \
test2011_34.C \
test2011_35.C \
test2011_36.C \
test2011_37.C \
test2011_38.C \
test2011_39.C \
test2011_40.C \
test2011_41.C \
test2011_42.C \
test2011_43.C \
test2011_44.C \
test2011_45.C \
test2011_46.C \
test2011_47.C \
test2011_48.C \
test2011_49.C \
test2011_50.C \
test2011_51.C \
test2011_52.C \
test2011_53.C \
test2011_54.C \
test2011_55.C \
test2011_56.C \
test2011_57.C \
test2011_58.C \
test2011_59.C \
test2011_60.C \
test2011_61.C \
test2011_62.C \
test2011_63.C \
test2011_64.C \
test2011_67.C \
test2011_68.C \
test2011_69.C \
test2011_70.C \
test2011_71.C \
test2011_72.C \
test2011_73.C \
test2011_74.C \
test2011_75.C \
test2011_76.C \
test2011_77.C \
test2011_78.C \
test2011_79.C \
test2011_80.C \
test2011_81.C \
test2011_82.C \
test2011_83.C \
test2011_84.C \
test2011_85.C \
test2011_86.C \
test2011_87.C \
test2011_88.C \
test2011_90.C \
test2011_91.C \
test2011_92.C \
test2011_93.C \
test2011_94.C \
test2011_95.C \
test2011_96.C \
test2011_97.C \
test2011_98.C \
test2011_99.C \
test2011_100.C \
test2011_101.C \
test2011_110.C \
test2011_111.C \
test2011_115.C \
test2011_117.C \
test2011_118.C \
test2011_119.C \
test2011_120.C \
test2011_133.C \
test2011_135.C \
test2011_136.C \
test2011_137.C \
test2011_138.C \
test2011_139.C \
test2011_140.C \
test2011_143.C \
test2011_146.C \
test2011_147.C \
test2005_112.C \
test2005_117.C \
test2005_154.C \
test2005_163.C \
test2005_179.C \
test2005_183.C \
test2005_194.C \
test2005_199.C \
test2006_86.C \
test2006_121.C \
test2006_139.C \
test2006_147.C \
test2006_151.C \
test2006_159.C \
test2007_01.C \
test2007_13.C \
test2007_17.C \
test2007_55.C \
test2007_78.C \
test2008_04.C \
test_int_lexemes.C \
test_int_lexemes_donot_pass.C \
test_simple_int.C \
test_wchars.C \
lexPhase2003_01.C \
math.C \
inputForLoopLocator.C \
X.C \
inputBug327.C \
test2005_09.C \
test2005_104.C \
test2010_24.C 


# DQ (9/17/2014): These are new failing tests as a result of some chages to ROSE in 2014 (or since Sept 2013).
NEW_FAILING_TESTS = \
test2004_104.C \
test2004_105.C \
test2004_129.C \
test2005_34.C \
test2005_103.C \
test2005_142.C \
test2006_141.C \
test2009_41.C \
test2011_141.C \
test2011_142.C \
test2004_85.C


# DQ (9/17/2014): These are failing tests as of September 2013.
FAILING_TESTS = \
test2004_120.C \
test2004_127.C \
test2005_35.C \
test2005_128.C \
test2006_53.C \
test2006_84.C \
test2006_124.C \
inputBug317.C 

REGRESSION_C_SUBSET_OF_CXX_TESTCODES = \
test_CplusplusMacro_C.C \
test2001_02.C \
test2001_03.C \
test2001_05.C \
test2001_07.C \
test2001_08.C \
test2001_09.C \
test2001_14.C \
test2001_17.C \
test2001_23.C \
test2001_24.C \
test2001_25.C \
test2001_26.C \
test2002_01.C \
test2003_04.C \
test2003_05.C \
test2003_06.C \
test2003_10.C \
test2003_11.C \
test2003_13.C \
test2003_14.C \
test2003_15.C \
test2003_16.C \
test2003_18.C \
test2003_19.C \
test2003_20.C \
test2003_21.C \
test2003_23.C \
test2003_24.C \
test2003_25.C \
test2003_26.C \
test2003_29.C \
test2003_30.C \
test2003_31.C \
test2003_32.C \
test2003_35.C \
test2003_36.C \
test2004_03.C \
test2004_04.C \
test2004_05.C \
test2004_13.C \
test2004_14.C \
test2004_19.C \
test2004_23.C \
test2004_28.C \
test2004_29.C \
test2004_49.C \
test2004_53.C \
test2004_60.C \
test2004_61.C \
test2004_72.C \
test2004_74.C \
test2004_94.C \
test2004_96.C \
test2004_102.C \
test2004_105.C \
test2004_107.C \
test2004_108.C \
test2004_114.C \
test2004_118.C \
test2004_131.C \
test2004_152.C \
test2004_153.C \
test2004_154.C \
test2004_163.C \
test2005_16.C \
test2005_20.C \
test2005_21.C \
test2005_22.C \
test2005_23.C \
test2005_26.C \
test2005_48.C \
test2005_62.C \
test2005_84.C \
test2005_92.C \
test2005_95.C \
test2005_100.C \
test2005_111.C \
test2005_116.C \
test2005_125.C \
test2005_157.C \
test2005_159.C \
test2005_164.C \
test2005_165.C \
test2005_169.C \
test2005_170.C \
test2005_176.C \
test2005_180.C \
test2005_182.C \
test2005_184.C \
test2005_187.C \
test2005_191.C \
test2005_198.C \
test2005_202.C \
test2005_209.C \
test2006_07.C \
test2006_10.C \
test2006_12.C \
test2006_14.C \
test2006_16.C \
test2006_23.C \
test2006_34.C \
test2006_40.C \
test2006_50.C \
test2006_52.C \
test2006_53.C \
test2006_55.C \
test2006_56.C \
test2006_57.C \
test2006_62.C \
test2006_69.C \
test2006_75.C \
test2006_76.C \
test2006_82.C \
test2006_83.C \
test2006_88.C \
test2006_91.C \
test2006_93.C \
test2006_94.C \
test2006_97.C \
test2006_99.C \
test2006_103.C \
test2006_104.C \
test2006_105.C \
test2006_106.C \
test2006_107.C \
test2006_108.C \
test2006_109.C \
test2006_111.C \
test2006_113.C \
test2006_116.C \
test2006_137.C \
test2006_140.C \
test2006_142.C \
test2006_145.C \
test2006_146.C \
test2006_147.C \
test2006_148.C \
test2006_149.C \
test2006_150.C \
test2006_151.C \
test2006_152.C \
test2006_153.C \
test2006_154.C \
test2006_181.C \
test2008_04.C \
test2010_16.C \
test_int_lexemes.C \
test_int_lexemes_donot_pass.C \
test_simple_int.C \
test_wchars.C \
X.C


# DQ (9/29/2014): This test code required the TEST_STRING_MACRO macro to be defined on the command line (ignore it for these ATerm tests).
# test2005_56.C 

#PASSING_REGRESSION_TEST_Output = $(addprefix rose_,${REGRESSION_TESTCODES})
# PASSING_REGRESSION_TEST_Output = ${REGRESSION_TESTCODES}
# PASSING_TEST_Objects = ${TESTCODES:.C=.o} ${ROSE__CXX_TESTS__BOOST:.C=.o}
# PASSING_REGRESSION_TEST_Output = ${REGRESSION_TESTCODES:.C=.C.dot} ${ROSE__CXX_TESTS:.C=.C.dot}
PASSING_REGRESSION_TEST_Output = ${REGRESSION_TESTCODES:.C=.C.dot} 
PASSING_REGRESSION_TEST_ATerm_Output = ${REGRESSION_TESTCODES:.C=.C.dot} 

# PASSING_REGRESSION_TEST_AST_Output = ${REGRESSION_TESTCODES:.C=.C.dot}
TESTS_THAT_FAIL = 
PASSING_REGRESSION_TEST_AST_Output = $(addsuffix .passed, $(filter-out $(TESTS_THAT_FAIL), $(REGRESSION_TESTCODES)))
PASSING_REGRESSION_C_SUBSET_OF_CXX_TEST_Output = ${REGRESSION_C_SUBSET_OF_CXX_TESTCODES:.C=.C.dot}
PASSING_REGRESSION_C_SUBSET_OF_CXX_TEST_ATerm_Output = ${REGRESSION_C_SUBSET_OF_CXX_TESTCODES:.C=.C.dot}
EXTRA_DIST = 
CLEANFILES = 
all: all-recursive

.SUFFIXES:
.SUFFIXES: .C .c++ .l++ .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs $(top_srcdir)/tests/nonsmoke/functional/input_codes/cxx/Makefile_variables $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps projects/AtermTranslation/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign --ignore-deps projects/AtermTranslation/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs $(top_srcdir)/tests/nonsmoke/functional/input_codes/cxx/Makefile_variables $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

termpretty$(EXEEXT): $(termpretty_OBJECTS) $(termpretty_DEPENDENCIES) $(EXTRA_termpretty_DEPENDENCIES) 
	@rm -f termpretty$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(termpretty_OBJECTS) $(termpretty_LDADD) $(LIBS)

testTranslation_AST_to_ATerm$(EXEEXT): $(testTranslation_AST_to_ATerm_OBJECTS) $(testTranslation_AST_to_ATerm_DEPENDENCIES) $(EXTRA_testTranslation_AST_to_ATerm_DEPENDENCIES) 
	@rm -f testTranslation_AST_to_ATerm$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testTranslation_AST_to_ATerm_OBJECTS) $(testTranslation_AST_to_ATerm_LDADD) $(LIBS)

testTranslation_ATerm_to_AST$(EXEEXT): $(testTranslation_ATerm_to_AST_OBJECTS) $(testTranslation_ATerm_to_AST_DEPENDENCIES) $(EXTRA_testTranslation_ATerm_to_AST_DEPENDENCIES) 
	@rm -f testTranslation_ATerm_to_AST$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testTranslation_ATerm_to_AST_OBJECTS) $(testTranslation_ATerm_to_AST_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.C.o:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.C.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

.c++.o:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.c++.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c++.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

.l++.c++:
	$(AM_V_LEX)$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-recursive
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f termpretty.c++
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am check-local clean clean-binPROGRAMS clean-generic \
	clean-libtool clean-local cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-includeHEADERS

.PRECIOUS: Makefile


# JJW (2/25/2008): set a flag (only used when running ROSE applications) to
# have them run using the build tree rather than the install tree -- this is
# important for "make check" in an uninstalled copy of ROSE.
@USE_ROSE_IN_BUILD_TREE_VAR_TRUE@export ROSE_IN_BUILD_TREE=$(top_builddir)

# Temporary workaround for lack of AM_EXTRA_RECURSIVE_TARGETS in automake 1.11 and 1.12 [Matzke, 2016-09-14]
# The check for "." is because $ROSE/tests adds "." to SUBDIRS which would otherwise result in infinite recursion.
# The checks for other names are because we don't want to recurse into some directories that don't include this
# file and therefore don't have this rule (but that means these names can't be test subdirecties elsewhere either).
check-smoke check-nonsmoke check-all:
	@for subdir in $(SUBDIRS); do						\
		if [ "$$subdir" != .						\
			-a "$$subdir" != libltdl				\
			-a "$$subdir" != config					\
			-a "$$subdir" != EDG					\
			-a "$$subdir" != DLX					\
			-a "$$subdir" != MFB					\
			-a "$$subdir" != MDCG					\
			-a "$$subdir" != KLT					\
			-a "$$subdir" != 3rdPartyLibraries			\
			-a "$$subdir" != roseHPCToolkit				\
			-a "$$subdir" != projects				\
			-a "$$subdir" != docs					\
			-a "$$subdir" != tools ]; then				\
			echo "Making $@ in $$subdir";				\
			$(MAKE) $(AM_MAKEFLAGS) -C "$$subdir" $@ || exit 1;	\
		fi;								\
	done
	$(MAKE) $(AM_MAKEFLAGS) $@-local

check-smoke-local check-nonsmoke-local:
check-all-local: check-smoke-local check-nonsmoke-local

# Temporary until Jenkins and the Matrix are fixed to run "make check-all" isntead of "make check".  The correct version
# should be that check-local depends only on check-smoke-local. [Matzke, 2016-09-21].
check-local: check-smoke-local check-nonsmoke-local

clean-test-targets:
	rm -f $(TEST_TARGETS)
	rm -f $(TEST_TARGETS:.passed=.failed)
	rm -f $(TEST_TARGETS:.passed=.out)
	rm -f $(TEST_TARGETS:.passed=.err)

clean-local: clean-test-targets

.PHONY: check-smoke check-nonsmoke check-all check-smoke-local check-nonsmoke-local check-all-local clean-test-targets
@USING_CLANG_COMPILER_FALSE@	test2013_246.C 

# endif

# rose_%: $(srcdir)/tests/nonsmoke/functional/CompileTests/Cxx_tests/% ./termGraph_using_RoseAtermAPI
#$(PASSING_REGRESSION_TEST_Output): ./termGraph_using_RoseAtermAPI
#	./termGraph_using_RoseAtermAPI $(ROSE_FLAGS) $(srcdir)/tests/nonsmoke/functional/CompileTests/Cxx_tests/$@
#$(PASSING_REGRESSION_TEST_Output): ./termGraph_using_RoseAtermAPI
#	./termGraph_using_RoseAtermAPI $(ROSE_FLAGS) -c $(top_srcdir)/tests/nonsmoke/functional/CompileTests/Cxx_tests/test2001_01.C
# $(PASSING_REGRESSION_TEST_Output): ./termGraph_using_RoseAtermAPI
$(PASSING_REGRESSION_TEST_Output): 
	./termGraph_using_RoseAtermAPI $(ROSE_FLAGS) -I$(top_srcdir)/tests/nonsmoke/functional/CompileTests/Cxx_tests -c $(top_srcdir)/tests/nonsmoke/functional/CompileTests/Cxx_tests/$(@:.C.dot=.C)

$(PASSING_REGRESSION_TEST_ATerm_Output): ./testTranslation_AST_to_ATerm
	./testTranslation_AST_to_ATerm $(ROSE_FLAGS) -I$(top_srcdir)/tests/nonsmoke/functional/CompileTests/Cxx_tests -c $(top_srcdir)/tests/nonsmoke/functional/CompileTests/Cxx_tests/$(@:.C.dot=.C)

$(PASSING_REGRESSION_TEST_AST_Output): ./testTranslation_ATerm_to_AST
	./testTranslation_AST_to_ATerm $(ROSE_FLAGS) -I$(top_srcdir)/tests/nonsmoke/functional/CompileTests/Cxx_tests -c $(top_srcdir)/tests/nonsmoke/functional/CompileTests/Cxx_tests/$(@:.C.passed=.C)
#	./testTranslation_ATerm_to_AST $(@:.C.dot=.C_TAF.aterm)
	@$(RTH_RUN) CMD="./testTranslation_ATerm_to_AST $(@:.C.passed=.C_TAF.aterm)" $(top_srcdir)/scripts/test_exit_status $@

$(PASSING_TEST_Output): ./testTranslation_ATerm_to_AST ./testTranslation_AST_to_ATerm
	./testTranslation_AST_to_ATerm $(ROSE_FLAGS) -c $(srcdir)/$(@:.C.passed=.C)
#	./testTranslation_ATerm_to_AST $(@:.C.dot=.C_TAF.aterm)
	@$(RTH_RUN) CMD="./testTranslation_ATerm_to_AST $(@:.C.passed=.C_TAF.aterm)" $(top_srcdir)/scripts/test_exit_status $@

# $(PASSING_REGRESSION_C_SUBSET_OF_CXX_TEST_Output): ./termGraph_using_RoseAtermAPI
#	@echo "Part 1: Copy the file to the local build tree so that we can change the file name suffix (to be a C language file) ..."
#	cp $(top_srcdir)/tests/nonsmoke/functional/CompileTests/Cxx_tests/$(@:.C.dot=.C) $(@:.C.dot=.c)
#	./termGraph_using_RoseAtermAPI $(ROSE_FLAGS) -I$(top_srcdir)/tests/nonsmoke/functional/CompileTests/Cxx_tests -c $(@:.C.dot=.c)
#	rm -f $(@:.C.dot=.c)

# $(PASSING_REGRESSION_C_SUBSET_OF_CXX_TEST_ATerm_Output): ./termGraph_using_RoseAtermAPI
#	@echo "Part 2: Copy the file to the local build tree so that we can change the file name suffix (to be a C language file) ..."
#	cp $(top_srcdir)/tests/nonsmoke/functional/CompileTests/Cxx_tests/$(@:.C.dot=.C) $(@:.C.dot=.c)
#	./testTranslation_AST_to_ATerm $(ROSE_FLAGS) -I$(top_srcdir)/tests/nonsmoke/functional/CompileTests/Cxx_tests -c $(@:.C.dot=.c)
#	rm -f $(@:.C.dot=.c)

# $(TEST_Output): ../../testTranslator $(srcdir)/$(@:rose_%=%)
# ../../testTranslator -rose:UPC $(ROSE_FLAGS) -c $(srcdir)/$(@:rose_%=%)
../../testTranslator:
	cd ../..; $(MAKE) testTranslator

test1: testTranslation_AST_to_ATerm_to_AST
#	./termGraph_using_RoseAtermAPI $(ROSE_FLAGS) -I$(top_srcdir)/tests/nonsmoke/functional/CompileTests/Cxx_tests -c $(srcdir)/test2013_01.C
	./testTranslation_AST_to_ATerm_to_AST $(ROSE_FLAGS) -I$(top_srcdir)/tests/nonsmoke/functional/CompileTests/Cxx_tests -c $(srcdir)/test2013_01.C

test2: testTranslation_AST_to_ATerm_to_AST
	@echo "Tests for ATerm C examples."
#	@$(MAKE) $(PASSING_REGRESSION_C_SUBSET_OF_CXX_TEST_Output)
	@$(MAKE) $(PASSING_REGRESSION_TEST_ATerm_Output)

test3: testTranslation_ATerm_to_AST
	@echo "Tests for ATerm to ROSE examples."
	@$(MAKE) $(PASSING_REGRESSION_TEST_AST_Output)

test4: testTranslation_ATerm_to_AST testTranslation_AST_to_ATerm
	@$(MAKE) $(PASSING_TEST_Output)

test: termGraph
	./termGraph atermFile.aterm

testAPI: ./termGraph_using_RoseAtermAPI
	./termGraph_using_RoseAtermAPI $(srcdir)/test2013_01.C

# This test demonstrate the use of forwarded function more similar to the paper (but for C instead of Java).
# testAPI_withForwardedFunctions: ./termGraph_using_RoseAtermAPI_withForwardedFunctions
# 	./termGraph_using_RoseAtermAPI_withForwardedFunctions $(srcdir)/test2013_01.C

@ROSE_WITH_ATERM_TRUE@status:
@ROSE_WITH_ATERM_TRUE@	echo "ROSE_WITH_ATERM is defined"

check-local:
	@echo "Tests for ATerm examples."
#	@$(MAKE) $(PASSING_TEST_Output)
#	@$(MAKE) $(PASSING_REGRESSION_TEST_Output)
#	@$(MAKE) $(PASSING_REGRESSION_C_SUBSET_OF_CXX_TEST_Output)
	@$(MAKE) $(PASSING_REGRESSION_TEST_ATerm_Output)
#	@$(MAKE) $(PASSING_REGRESSION_C_SUBSET_OF_CXX_TEST_ATerm_Output)
#	@$(MAKE) $(PASSING_REGRESSION_TEST_ATerm_Output)
	@echo "********************************************************************************************"
	@echo "****** ROSE/projects/AtermTranslation: make check rule complete (terminated normally) ******"
	@echo "********************************************************************************************"

clean-local:
	rm -rf Templates.DB ii_files ti_files rose_*.C *.pdf
	rm -f a.out *.dot *.aterm *.failed *.passed

clean_tests:
	rm -f a.out *.dot *.aterm *.failed *.passed

# rule to compile stretego program to generate a C file 
# which stretego compiles to generate an executable.
strtest1$(EXEEXT): strtest1.str
	strc -i strtest1

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
